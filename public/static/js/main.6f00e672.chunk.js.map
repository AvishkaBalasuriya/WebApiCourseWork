{"version":3,"sources":["App/layout/ScrollToTop/index.js","route.js","App/index.js","serviceWorker.js","store/reducer.js","store/IsLoggedReducer.js","store/index.js","index.js","store/logginActions.js","APIConfig.js","config.js","App/layout/Loader/index.js","hoc/_Aux/index.js","store/actions.js"],"names":["ScrollToTop","prevProps","this","props","location","window","scrollTo","children","React","Component","withRouter","SignUp1","lazy","Signin1","route","path","exact","name","component","AdminLayout","Loadable","loader","loading","Loader","App","menu","routes","map","index","key","render","fallback","connect","state","data","loggedReducer","dispatch","IsRoundData","user","school","userWiseAuthorization","Boolean","hostname","match","initialState","isOpen","isTrigger","config","isFullScreen","reducer","action","trigger","open","type","actionTypes","collapseMenu","console","log","triggerIndex","indexOf","id","filter","item","layout","error","logginStatus","cart","logginStatusCode","JSON","parse","localStorage","getItem","payLoad","logginUserCode","undefined","allReducers","combineReducers","reducers","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","IsLogginReuqest","message","getData","userData","schools","authorization","School","Authorization","loggout","setItem","OnNotification","notify","displayTime","position","at","offset","fetchLoginData","email","password","axios","post","APIURl","URL","response","success","accessToken","jwt","decode","stringify","code","IsVerfyingOTP","catch","addToCart","oldData","oldqty","length","element","_id","filterData","qty","items","push","price","discount","image","images","imageUrl","cartItem","IsAddToCart","logginType","fetchOTP","otp","userId","otpCode","module","exports","defaultPath","basename","preLayout","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","className","Aux","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","SET_USER","ERRROR_LOGGIN","USER_REQUEST_TO_LOGGIN","GET_USER_LOGGIN_DATA","ADD_CART_ITEM","OTP_VERIFICATION"],"mappings":"olBAGMA,E,iLACiBC,GACXC,KAAKC,MAAMC,WAAaH,EAAUG,UAClCC,OAAOC,SAAS,EAAG,K,+BAKvB,OAAOJ,KAAKC,MAAMI,a,GARAC,IAAMC,WAYjBC,cAAWV,GCbpBW,EAAUH,IAAMI,MAAK,kBACzB,yDAEIC,EAAUL,IAAMI,MAAK,kBACzB,gEAaaE,GAXSN,IAAMI,MAAK,kBACjC,wDAIY,CACZ,CAAEG,KAAM,iBAAkBC,OAAO,EAAMC,KAAM,WAAYC,UAAWP,GACpE,CAAEI,KAAM,SAAUC,OAAO,EAAMC,KAAM,SAAUC,UAAWL,GAC1D,CAAEE,KAAM,YAAaC,OAAO,EAAMC,KAAM,WAAYC,UALrCV,IAAMI,MAAK,kBAAM,wEAMhC,CAAEG,KAAM,mBAAoBC,OAAO,EAAMC,KAAM,WAAYC,UALtCV,IAAMI,MAAK,kBAAM,mE,SCIlCO,EAAcC,IAAS,CAC3BC,OAAQ,kBAAM,6DACdC,QAASC,MAGLC,E,kDACJ,aAAe,wC,qDAMb,IAAMC,EAAOC,EAAOC,KAAI,SAACb,EAAOc,GAC9B,OAAOd,EAAMI,UACX,kBAAC,IAAD,CACEW,IAAKD,EACLb,KAAMD,EAAMC,KACZC,MAAOF,EAAME,MACbC,KAAMH,EAAMG,KACZa,OAAQ,SAAC3B,GAAD,OAAW,kBAACW,EAAMI,UAAcf,MAExC,QAGN,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,WAAD,CAAU4B,SAAU,kBAACR,EAAA,EAAD,OAClB,kBAAC,IAAD,KACGE,EAID,kBAAC,IAAD,CAAOV,KAAK,IAAIG,UAAWC,Y,GA5BvBV,aA4DHuB,eAtBS,SAACC,GAGvB,MAAO,CACLC,KAAMD,EAAME,kBAIW,SAACC,GAC1B,MAAO,CACLC,YAAa,WACXD,EACEC,kB,GACOJ,MAAMK,W,GACNL,MAAMM,a,GACNN,MAAMO,4BAONR,CAA6CR,GCrExCiB,QACW,cAA7BpC,OAAOD,SAASsC,UAEe,UAA7BrC,OAAOD,SAASsC,UAEhBrC,OAAOD,SAASsC,SAASC,MACvB,2D,sCCfAC,EAAY,yBAChBC,OAAQ,GACRC,UAAW,IACRC,KAHa,IAIhBC,cAAc,IAqFDC,EAlFC,WAAmC,IAAlChB,EAAiC,uDAAzBW,EAAcM,EAAW,uCAC5CC,EAAU,GACVC,EAAO,GAEX,OAAQF,EAAOG,MACb,KAAKC,IACH,OAAO,2BACFrB,GADL,IAEEsB,cAAetB,EAAMsB,eAEzB,KAAKD,IAEH,GADAE,QAAQC,IAAI,WACa,QAArBP,EAAOzB,KAAK4B,KAAgB,CAC9BD,EAAOnB,EAAMY,OAGb,IAAMa,GAFNP,EAAUlB,EAAMa,WAEaa,QAAQT,EAAOzB,KAAKmC,IAC7CF,GAAgB,IAClBN,EAAOA,EAAKS,QAAO,SAACC,GAAD,OAAUA,IAASZ,EAAOzB,KAAKmC,MAClDT,EAAUA,EAAQU,QAAO,SAACC,GAAD,OAAUA,IAASZ,EAAOzB,KAAKmC,QAGpC,IAAlBF,IACFN,EAAI,sBAAOA,GAAP,CAAaF,EAAOzB,KAAKmC,KAC7BT,EAAO,sBAAOA,GAAP,CAAgBD,EAAOzB,KAAKmC,UAEhC,CACLR,EAAOnB,EAAMY,OACb,IAAMa,EAAezB,EAAMa,UAAUa,QAAQT,EAAOzB,KAAKmC,IACzDT,GAA4B,IAAlBO,EAAsB,CAACR,EAAOzB,KAAKmC,IAAM,GACnDR,GAAyB,IAAlBM,EAAsB,CAACR,EAAOzB,KAAKmC,IAAM,GAIlD,OAFAJ,QAAQC,IAAI,iBACZD,QAAQC,IAAIxB,GACL,2BACFA,GADL,IAEEY,OAAQO,EACRN,UAAWK,IAEf,KAAKG,IACH,OAAO,2BACFrB,GADL,IAEEY,OAAQO,EACRN,UAAWK,IAEf,KAAKG,IACH,GAAyB,QAArBJ,EAAOzB,KAAK4B,KAAgB,CAC9BD,EAAOnB,EAAMY,OAGb,IAAMa,GAFNP,EAAUlB,EAAMa,WAEaa,QAAQT,EAAOzB,KAAKmC,IAKjD,OAJIF,GAAgB,IAClBN,EAAOA,EAAKS,QAAO,SAACC,GAAD,OAAUA,IAASZ,EAAOzB,KAAKmC,MAClDT,EAAUA,EAAQU,QAAO,SAACC,GAAD,OAAUA,IAASZ,EAAOzB,KAAKmC,OAEnD,2BACF3B,GADL,IAEEY,OAAQO,EACRN,UAAWK,IAGf,OAAO,eAAKlB,GACd,KAAKqB,IACH,OAAO,2BACFrB,GADL,IAEEe,cAAef,EAAMe,eAEzB,KAAKM,IACH,OAAO,2BACFrB,GADL,IAEEe,cAAc,IAElB,KAAKM,IACH,OAAO,2BACFrB,GADL,IAEE8B,OAAQb,EAAOa,SAEnB,QACE,OAAO9B,I,SCtFAW,EAAe,CAC1BtB,SAAS,EACTgB,KAAM,GACN0B,MAAO,GACPC,cAAc,EACdC,KAAM,GACNC,iBAAiB,IA8EJhC,EA3EO,WAAmC,IAAlCF,EAAiC,uDAAzBW,EAAcM,EAAW,uCAEtD,OAAQA,EAAOG,MACb,KAAKC,IACH,OAAO,2BACFrB,GADL,IAEEX,SAAS,EACT4C,KAAME,KAAKC,MAAMC,aAAaC,QAAQ,SACtCJ,iBAAiB,KAErB,KAAKb,IACH,MAAO,CACLhC,SAAS,EACTgB,KAAMY,EAAOsB,QACbR,MAAO,GACPC,cAAc,EACdC,KAAME,KAAKC,MAAMC,aAAaC,QAAQ,SACtCJ,iBAAiB,IAGrB,KAAKb,IACH,MAAO,CACLhC,SAAS,EACTgB,KAAMY,EAAOsB,QACbR,MAAO,GACPC,cAAc,EACdC,KAAME,KAAKC,MAAMC,aAAaC,QAAQ,SACtCJ,iBAAiB,IAGnB,KAAKb,IACH,MAAO,CACLhC,SAAS,EACTgB,KAAMY,EAAOsB,QACbL,iBAAkBjB,EAAOuB,eACzBT,MAAO,GACPC,cAAc,GAGpB,QACE,OAAgD,MAA5CG,KAAKC,MAAMC,aAAaC,QAAQ,SAC3B,CACLjD,SAAS,EACTgB,KAAM8B,KAAKC,MAAMC,aAAaC,QAAQ,SACtCP,MAAO,GACPC,cAAc,EACdC,KAAME,KAAKC,MAAMC,aAAaC,QAAQ,SACtCJ,iBAAiB,SAGDO,GAAdzC,EAAMiC,MAAmC,MAAdjC,EAAMiC,MAC5B,EAAP,CACE5C,SAAS,EACTgB,KAAM,GACN4B,KAAMjC,EAAMiC,KACZF,MAAOd,EAAOsB,QACdP,cAAc,GALhB,qBAMQG,KAAKC,MAAMC,aAAaC,QAAQ,UANxC,iCAOmB,IAPnB,IAUO,EAAP,CACEjD,SAAS,EACTgB,KAAM,GACN4B,KAAM,GACNF,MAAOd,EAAOsB,QACdP,cAAc,GALhB,qBAMQG,KAAKC,MAAMC,aAAaC,QAAQ,UANxC,iCAOmB,IAPnB,GAXkD,IAAD,EAU5C,IC9DAI,EALKC,0BAAgB,CAClCC,SAAU5B,EACVd,cAAeA,I,2BCSX2C,EAAmBC,8BAAoB,IACvCC,EAAQC,sBAAYhC,EAAS6B,EAAiBI,0BAAgBC,OAE9DC,EACJ,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAKNK,IAASvD,OAAOsD,EAAKE,SAASC,eAAe,SJuGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,iCKnInB,uSAOaC,EAAkB,WAC7B,MAAO,CACLzC,KAAMC,IACNkB,QAAS,GACTuB,QAAS,iBAGAC,EAAU,WACrB,MAAO,CACL3C,KAAMC,IACNkB,QAAS,GACTuB,QAAS,yBAoBA1D,EAAc,SAAC4D,EAAUC,EAASC,GAC7C,MAAO,CACL9C,KAAMC,IACNkB,QAASyB,EACTF,QAAS,iBACTK,OAAQF,EACRG,cAAeF,IAYNG,EAAU,WAMrB,OALAhC,aAAaiC,QAAQ,OAAQ,MAC7BjC,aAAaiC,QAAQ,SAAU,MAC/BjC,aAAaiC,QAAQ,gBAAiB,MACtCjC,aAAaiC,QAAQ,mBAAoB,MACzCjC,aAAaiC,QAAQ,uBAAwB,MACtC,SAACnE,GAdY,IAAC4B,EAenB5B,GAfmB4B,EAeI,GAdlB,CACLX,KAAMC,IACNkB,QAASR,EACT+B,QAAS,oBAePS,EAAiB,SAACT,EAAS1C,GAC/BoD,IAAO,CACLV,QAASA,EACT1C,KAAMA,EACNqD,YAAa,IACbC,SAAU,CAAEC,GAAI,YAAaC,OAAQ,SAI5BC,EAAiB,SAACC,EAAOC,GACpC,OAAO,SAAC5E,GACNA,EAAS0D,GACI,MAATiB,GAA6B,MAAZC,GACnBC,IACGC,KAAUC,IAAOC,IAAM,aAAc,CACpCL,MAAOA,EACPC,SAAUA,IAEXrB,MAAK,SAAC0B,GA/DS,IAACpB,EAgEXoB,EAASnF,KAAKoF,SAChBhD,aAAaiC,QAAQ,cAAec,EAASnF,KAAKA,KAAKqF,aACvDF,EAASnF,KAAKA,KAAKqF,YAAcC,IAAIC,OACnCJ,EAASnF,KAAKA,KAAKqF,aAErBjD,aAAaiC,QAAQ,OAAQnC,KAAKsD,UAAUL,EAASnF,OAErDE,GAvEa6D,EAuEYoB,EAASnF,KAAMmF,EAASnF,KAAKyF,KAtEzD,CACLtE,KAAMC,IACNkB,QAASyB,EACTF,QAAS,sBAqEDvC,QAAQC,IAAI,OAAQ4D,EAASnF,MACH,KAAtBmF,EAASnF,KAAKyF,MAChBvF,EAASwF,EAAcP,EAASnF,KAAMmF,EAASnF,KAAKyF,OAEtDnB,EAAea,EAASnF,KAAK8B,MAAO,aAGvC6D,OAAM,SAAC7D,GACNR,QAAQC,IAAI,QAASO,GACrBwC,EAAe,cAAe,cAM3BsB,EAAY,SAAChE,GACxB,OAAO,SAAC1B,GAEN,IAAI2F,EAAU,GACkC,MAA5C3D,KAAKC,MAAMC,aAAaC,QAAQ,WAClCwD,EAAU3D,KAAKC,MAAMC,aAAaC,QAAQ,UAG5Cf,QAAQC,IAAI,SAAUsE,GACtB,IAAIC,EAAS,EAETD,EAAQE,OAAS,IACnBF,EACGlE,QAAO,SAACqE,GAAD,OAAaA,EAAQC,KAAOrE,EAAKqE,OACxCxG,KAAI,SAACyG,GAAD,OAAiBJ,EAASI,EAAWC,IAAM,KAElD7E,QAAQC,IAAI,SAAUuE,IAGpBA,EAAS,EACXD,EAAQpG,KAAI,SAAC2G,GACPA,EAAMH,KAAOrE,EAAKqE,MACpBG,EAAMD,IAAML,MAMhBD,EAAQQ,KAAK,CACXJ,IAAKrE,EAAKqE,IACVlH,KAAM6C,EAAK7C,KACXuH,MAAO1E,EAAK0E,MACZH,IAAKL,EACLS,SAAU3E,EAAK2E,SACfC,MAA6B,GAAtB5E,EAAK6E,OAAOV,OAAc,UAAYnE,EAAK6E,OAAO,GAAGC,WAIhEtE,aAAaiC,QAAQ,OAAQnC,KAAKsD,UAAUK,IAC5C3F,EAvHgB,SAAC0B,GACnB,MAAO,CACLT,KAAMC,IACNuF,SAAU/E,EACViC,QAAS,gBAmHA+C,CAAYhF,MAInB8D,EAAgB,SAAC3B,EAAU8C,GAC/B,MAAO,CACL1F,KAAMC,IACNkB,QAASyB,EACTxB,eAAgBsE,EAChBhD,QAAS,0BAIAiD,EAAW,SAAC1G,EAAM2G,GAE7B,OADAzF,QAAQC,IAAI,OAAQnB,GACb,SAACF,GACNA,EAAS0D,GAETmB,IACGC,KAAUC,IAAOC,IAAM,aAAc,CACpC8B,OAAQ5G,EACR6G,QAASF,IAEVtD,MAAK,SAAC0B,GACDA,EAASnF,KAAKoF,QAChBlF,EAASwF,EAAcP,EAASnF,KAAMmF,EAASnF,KAAKyF,OAEpDnB,EAAea,EAASnF,KAAK8B,MAAO,YAGvC6D,OAAM,SAAC7D,GACNR,QAAQC,IAAI,QAASO,GACrBwC,EAAe,cAAe,e,kBCjLtC4C,EAAOC,QAJM,CACXjC,IAAK,0C,iCCDQ,KACbkC,YAAa,qBACbC,SAAU,GACVxF,OAAQ,WACRyF,UAAW,KACXjG,cAAc,EACdkG,WAAY,aACZC,cAAc,EACdC,gBAAiB,iBACjBC,aAAc,iBACdC,cAAe,gBACfC,cAAc,EACdC,WAAW,EACXC,gBAAgB,EAChBC,mBAAmB,EACnBC,WAAW,EACXC,gBAAiB,SACjBC,YAAa,SACbC,mBAAoB,iBACpBC,kBAAmB,gBACnBC,kBAAkB,EAClBC,aAAa,EACbC,kBACE,mEACFC,gBAAiB,K,iCCxBnB,qBAYerJ,IAVA,WACX,OACI,yBAAKsJ,UAAU,aACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,oB,iCCJhBC,IAFH,SAACzK,GAAD,OAAWA,EAAMI,W,gCCA7B,0bAAO,IAAMsK,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAc,cACdC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAoB,oBACpBC,EAAqB,qBACrBC,EAAW,WACXC,EAAgB,gBAChBC,EAAyB,yBACzBC,EAAuB,uBAEvBC,EAAgB,gBAChBC,EAAiB,oB","file":"static/js/main.6f00e672.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router';\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\nexport default withRouter(ScrollToTop);","import React from \"react\";\n\nconst SignUp1 = React.lazy(() =>\n  import(\"./Demo/Authentication/SignUp/SignUp1\")\n);\nconst Signin1 = React.lazy(() =>\n  import(\"./Demo/Authentication/SignIn/SignIn1\")\n);\nconst OTPVerification = React.lazy(() =>\n  import(\"./Demo/Authentication/SignIn/OTPVerfication\")\n);\nconst Register = React.lazy(() => import(\"./component/User/Register\"));\nconst ForgetPassword = React.lazy(() => import(\"./Demo/Authentication/SignIn/ForgetPassword\"));\nconst route = [\n  { path: \"/auth/signup-1\", exact: true, name: \"Signup 1\", component: SignUp1 },\n  { path: \"/login\", exact: true, name: \"Signin\", component: Signin1 },\n  { path: \"/register\", exact: true, name: \"register\", component: Register },\n  { path: \"/forget-password\", exact: true, name: \"register\", component: ForgetPassword },\n];\nexport default route;\n","import React, { Component, Suspense } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Loadable from \"react-loadable\";\n\nimport \"../../node_modules/font-awesome/scss/font-awesome.scss\";\n\nimport Loader from \"./layout/Loader\";\nimport Aux from \"../hoc/_Aux\";\nimport ScrollToTop from \"./layout/ScrollToTop\";\nimport routes from \"../route\";\n\nimport { connect } from \"react-redux\";\nimport { getData } from \"../store/logginActions\";\n\nimport { IsRoundData } from \"../store/logginActions\";\n\nconst AdminLayout = Loadable({\n  loader: () => import(\"./layout/AdminLayout\"),\n  loading: Loader,\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    // console.log(\"Loggin Redducer\");\n  }\n\n  render() {\n    const menu = routes.map((route, index) => {\n      return route.component ? (\n        <Route\n          key={index}\n          path={route.path}\n          exact={route.exact}\n          name={route.name}\n          render={(props) => <route.component {...props} />}\n        />\n      ) : null;\n    });\n\n    return (\n      <Aux>\n        <ScrollToTop>\n          <Suspense fallback={<Loader />}>\n            <Switch>\n              {menu}\n              {/* {!this.props.data.logginStatus ? (\n                <Redirect to={\"/\"} />\n              ) : ( */}\n              <Route path=\"/\" component={AdminLayout} />\n              {/* )} */}\n            </Switch>\n          </Suspense>\n        </ScrollToTop>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(\"APP COMPONENT\");\n  // console.log(state.loggedReducer);\n  return {\n    data: state.loggedReducer,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    IsRoundData: () => {\n      dispatch(\n        IsRoundData(\n          this.state.user,\n          this.state.school,\n          this.state.userWiseAuthorization\n        )\n      );\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"./actions\";\nimport config from \"./../config\";\n\nconst initialState = {\n  isOpen: [], //for active default menu\n  isTrigger: [], //for active default menu, set blank for horizontal\n  ...config,\n  isFullScreen: false, // static can't change\n};\n\nconst reducer = (state = initialState, action) => {\n  let trigger = [];\n  let open = [];\n\n  switch (action.type) {\n    case actionTypes.COLLAPSE_MENU:\n      return {\n        ...state,\n        collapseMenu: !state.collapseMenu,\n      };\n    case actionTypes.COLLAPSE_TOGGLE:\n      console.log(\"reducer\");\n      if (action.menu.type === \"sub\") {\n        open = state.isOpen;\n        trigger = state.isTrigger;\n\n        const triggerIndex = trigger.indexOf(action.menu.id);\n        if (triggerIndex > -1) {\n          open = open.filter((item) => item !== action.menu.id);\n          trigger = trigger.filter((item) => item !== action.menu.id);\n        }\n\n        if (triggerIndex === -1) {\n          open = [...open, action.menu.id];\n          trigger = [...trigger, action.menu.id];\n        }\n      } else {\n        open = state.isOpen;\n        const triggerIndex = state.isTrigger.indexOf(action.menu.id);\n        trigger = triggerIndex === -1 ? [action.menu.id] : [];\n        open = triggerIndex === -1 ? [action.menu.id] : [];\n      }\n      console.log(\"reducer state\");\n      console.log(state);\n      return {\n        ...state,\n        isOpen: open,\n        isTrigger: trigger,\n      };\n    case actionTypes.NAV_CONTENT_LEAVE:\n      return {\n        ...state,\n        isOpen: open,\n        isTrigger: trigger,\n      };\n    case actionTypes.NAV_COLLAPSE_LEAVE:\n      if (action.menu.type === \"sub\") {\n        open = state.isOpen;\n        trigger = state.isTrigger;\n\n        const triggerIndex = trigger.indexOf(action.menu.id);\n        if (triggerIndex > -1) {\n          open = open.filter((item) => item !== action.menu.id);\n          trigger = trigger.filter((item) => item !== action.menu.id);\n        }\n        return {\n          ...state,\n          isOpen: open,\n          isTrigger: trigger,\n        };\n      }\n      return { ...state };\n    case actionTypes.FULL_SCREEN:\n      return {\n        ...state,\n        isFullScreen: !state.isFullScreen,\n      };\n    case actionTypes.FULL_SCREEN_EXIT:\n      return {\n        ...state,\n        isFullScreen: false,\n      };\n    case actionTypes.CHANGE_LAYOUT:\n      return {\n        ...state,\n        layout: action.layout,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"./actions\";\n\nexport const initialState = {\n  loading: false,\n  user: [],\n  error: \"\",\n  logginStatus: false,\n  cart: [],\n  logginStatusCode:\"\"\n};\n\nconst loggedReducer = (state = initialState, action) => {\n  let user = [];\n  switch (action.type) {\n    case actionTypes.USER_REQUEST_TO_LOGGIN:\n      return {\n        ...state,\n        loading: true,\n        cart: JSON.parse(localStorage.getItem(\"cart\")),\n        logginStatusCode:\"\"\n      };\n    case actionTypes.SET_USER:\n      return {\n        loading: false,\n        user: action.payLoad,\n        error: \"\",\n        logginStatus: true,\n        cart: JSON.parse(localStorage.getItem(\"cart\")),\n        logginStatusCode:\"\"\n      };\n\n    case actionTypes.ERRROR_LOGGIN:\n      return {\n        loading: false,\n        user: action.payLoad,\n        error: \"\",\n        logginStatus: false,\n        cart: JSON.parse(localStorage.getItem(\"cart\")),\n        logginStatusCode:\"\"\n      };\n\n      case actionTypes.OTP_VERIFICATION:\n        return {\n          loading: false,\n          user: action.payLoad,\n          logginStatusCode: action.logginUserCode,\n          error: \"\",\n          logginStatus: false,\n        };\n\n    default:\n      if (JSON.parse(localStorage.getItem(\"user\")) != null) {\n        return {\n          loading: false,\n          user: JSON.parse(localStorage.getItem(\"user\")),\n          error: \"\",\n          logginStatus: true,\n          cart: JSON.parse(localStorage.getItem(\"cart\")),\n          logginStatusCode:\"\"\n        };\n      } else {\n        if (state.cart != undefined || state.cart != null) {\n          return {\n            loading: false,\n            user: [],\n            cart: state.cart,\n            error: action.payLoad,\n            logginStatus: false,\n            cart: JSON.parse(localStorage.getItem(\"cart\")),\n            logginStatusCode:\"\"\n          };\n        } else {\n          return {\n            loading: false,\n            user: [],\n            cart: [],\n            error: action.payLoad,\n            logginStatus: false,\n            cart: JSON.parse(localStorage.getItem(\"cart\")),\n            logginStatusCode:\"\"\n          };\n        }\n      }\n  }\n};\n\nexport default loggedReducer;\n","import { combineReducers } from \"redux\";\nimport reducer from \"./reducer\";\nimport loggedReducer from \"./IsLoggedReducer\";\n\nconst allReducers = combineReducers({\n  reducers: reducer,\n  loggedReducer: loggedReducer,\n});\n\nexport default allReducers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App/index\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer from \"./store\";\nimport config from \"./config\";\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"devextreme/dist/css/dx.light.css\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","import { ActionSheet } from \"devextreme-react\";\nimport * as actionTypes from \"./actions\";\nimport axios from \"axios\";\nimport notify from \"devextreme/ui/notify\";\nimport APIURl from \"../APIConfig\";\nimport jwt from \"jsonwebtoken\";\n\nexport const IsLogginReuqest = () => {\n  return {\n    type: actionTypes.USER_REQUEST_TO_LOGGIN,\n    payLoad: [],\n    message: \"Error Loggin\",\n  };\n};\nexport const getData = () => {\n  return {\n    type: actionTypes.GET_USER_LOGGIN_DATA,\n    payLoad: [],\n    message: \"Error Loggin Attempt\",\n  };\n};\n\nconst IsLoggedSuccess = (userData) => {\n  return {\n    type: actionTypes.SET_USER,\n    payLoad: userData,\n    message: \"Loggin Success\",\n  };\n};\n\nconst IsAddToCart = (item) => {\n  return {\n    type: actionTypes.ADD_CART_ITEM,\n    cartItem: item,\n    message: \"Cart Success\",\n  };\n};\n\nexport const IsRoundData = (userData, schools, authorization) => {\n  return {\n    type: actionTypes.SET_USER,\n    payLoad: userData,\n    message: \"Loggin Success\",\n    School: schools,\n    Authorization: authorization,\n  };\n};\n\nconst IsLogginError = (error) => {\n  return {\n    type: actionTypes.ERRROR_LOGGIN,\n    payLoad: error,\n    message: \"Error Loggin\",\n  };\n};\n\nexport const loggout = () => {\n  localStorage.setItem(\"user\", null);\n  localStorage.setItem(\"School\", null);\n  localStorage.setItem(\"Authorization\", null);\n  localStorage.setItem(\"ApprovalDocument\", null);\n  localStorage.setItem(\"ApprovalDocumentAuth\", null);\n  return (dispatch) => {\n    dispatch(IsLogginError(\"\"));\n  };\n};\n\nconst OnNotification = (message, type) => {\n  notify({\n    message: message,\n    type: type,\n    displayTime: 3000,\n    position: { at: \"top right\", offset: \"50\" },\n  });\n};\n\nexport const fetchLoginData = (email, password) => {\n  return (dispatch) => {\n    dispatch(IsLogginReuqest);\n    if (email != null && password != null) {\n      axios\n        .post(\"\" + APIURl.URL + \"auth/login\", {\n          email: email,\n          password: password,\n        })\n        .then((response) => {\n          if (response.data.success) {\n            localStorage.setItem(\"accessToken\", response.data.data.accessToken);\n            response.data.data.accessToken = jwt.decode(\n              response.data.data.accessToken\n            );\n            localStorage.setItem(\"user\", JSON.stringify(response.data));\n\n            dispatch(IsLoggedSuccess(response.data, response.data.code));\n          } else {\n            console.log(\"user\", response.data);\n            if (response.data.code == 503) {\n              dispatch(IsVerfyingOTP(response.data, response.data.code));\n            }\n            OnNotification(response.data.error, \"error\");\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n          OnNotification(\"Login Fails\", \"error\");\n        });\n    }\n  };\n};\n\nexport const addToCart = (item) => {\n  return (dispatch) => {\n  \n    let oldData = [];\n    if (JSON.parse(localStorage.getItem(\"cart\")) != null) {\n      oldData = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n\n    console.log(\"Oldqty\", oldData);\n    let oldqty = 1;\n\n    if (oldData.length > 0) {\n      oldData\n        .filter((element) => element._id == item._id)\n        .map((filterData) => (oldqty = filterData.qty + 1));\n\n      console.log(\"Oldqty\", oldqty);\n    }\n\n    if (oldqty > 1) {\n      oldData.map((items) => {\n        if (items._id == item._id) {\n          items.qty = oldqty;\n        }\n      });\n\n   \n    } else {\n      oldData.push({\n        _id: item._id,\n        name: item.name,\n        price: item.price,\n        qty: oldqty,\n        discount: item.discount,\n        image: item.images.length == 0 ? \"Avatar1\" : item.images[0].imageUrl,\n      });\n    }\n\n    localStorage.setItem(\"cart\", JSON.stringify(oldData));\n    dispatch(IsAddToCart(item));\n  };\n};\n\nconst IsVerfyingOTP = (userData, logginType) => {\n  return {\n    type: actionTypes.OTP_VERIFICATION,\n    payLoad: userData,\n    logginUserCode: logginType,\n    message: \"Need to verficate OTP\",\n  };\n};\n\nexport const fetchOTP = (user, otp) => {\n  console.log(\"user\", user);\n  return (dispatch) => {\n    dispatch(IsLogginReuqest);\n\n    axios\n      .post(\"\" + APIURl.URL + \"otp/verify\", {\n        userId: user,\n        otpCode: otp,\n      })\n      .then((response) => {\n        if (response.data.success) {\n          dispatch(IsVerfyingOTP(response.data, response.data.code));\n        } else {\n          OnNotification(response.data.error, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\", error);\n        OnNotification(\"Login Fails\", \"error\");\n      });\n  };\n};\n","var APIURl = {\n  URL: \"https://webnibm.herokuapp.com/api/v1/\",\n};\n\nmodule.exports = APIURl;\n","export default {\n  defaultPath: \"/dashboard/default\",\n  basename: \"\", // only at build time to set, like /datta-able\n  layout: \"vertical\", // vertical, horizontal (not available in lite version)\n  preLayout: null, // (not available in lite version)\n  collapseMenu: false, // mini-menu\n  layoutType: \"menu-light\", // menu-dark, (menu-light, dark are not available in lite version)\n  navIconColor: false,\n  headerBackColor: \"header-default\", // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\n  navBackColor: \"navbar-default\", // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\n  navBrandColor: \"brand-default\", // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\n  navBackImage: false, // not available in lite version\n  rtlLayout: false, // not available in lite version\n  navFixedLayout: true,\n  headerFixedLayout: true, // not available in lite version\n  boxLayout: false,\n  navDropdownIcon: \"style1\", // style1, (style2, style3 are not available in lite version)\n  navListIcon: \"style1\", // style1, (style2, style3, style4, style5, style6 are not available in lite version)\n  navActiveListColor: \"active-default\", // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\n  navListTitleColor: \"title-default\", // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\n  navListTitleHide: false, // not available in lite version\n  configBlock: false, // not available in lite version\n  layout6Background:\n    \"linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)\", // used only for pre-layout = layout-6\n  layout6BackSize: \"\", // used only for pre-layout = layout-6\n};\n","import React from 'react';\n\nconst loader = () => {\n    return (\n        <div className=\"loader-bg\">\n            <div className=\"loader-track\">\n                <div className=\"loader-fill\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default loader;","const Aux = (props) => props.children;\n\nexport default Aux;","export const COLLAPSE_MENU = \"COLLAPSE_MENU\";\nexport const COLLAPSE_TOGGLE = \"COLLAPSE_TOGGLE\";\nexport const FULL_SCREEN = \"FULL_SCREEN\";\nexport const FULL_SCREEN_EXIT = \"FULL_SCREEN_EXIT\";\nexport const CHANGE_LAYOUT = \"CHANGE_LAYOUT\";\nexport const NAV_CONTENT_LEAVE = \"NAV_CONTENT_LEAVE\";\nexport const NAV_COLLAPSE_LEAVE = \"NAV_COLLAPSE_LEAVE\";\nexport const SET_USER = \"SET_USER\";\nexport const ERRROR_LOGGIN = \"ERRROR_LOGGIN\";\nexport const USER_REQUEST_TO_LOGGIN = \"USER_REQUEST_TO_LOGGIN\";\nexport const GET_USER_LOGGIN_DATA = \"GET_USER_LOGGIN_DATA\";\nexport const GET_USER_LOGOUT_DATA = \"GET_USER_LOGOUT_DATA\";\nexport const ADD_CART_ITEM = \"ADD_CART_ITEM\";\nexport const OTP_VERIFICATION=\"OTP_VERIFICATION\"\n"],"sourceRoot":""}