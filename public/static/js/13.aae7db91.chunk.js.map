{"version":3,"sources":["App/components/MainCard.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/react-bootstrap/esm/Navbar.js","component/User/Register.jsx"],"names":["MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","Component","NavbarBrand","React","forwardRef","_ref","ref","bsPrefix","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","displayName","NavbarCollapse","NavbarContext","Consumer","context","Collapse","expanded","NavbarToggle","label","_ref$as","_ref2","useContext","onToggle","handleClick","useEventCallback","e","type","defaultProps","NavbarText","createWithBsPrefix","Navbar","_useUncontrolled","useUncontrolled","initialBsPrefix","expand","variant","bg","fixed","sticky","_useUncontrolled$as","_onToggle","onSelect","collapseOnSelect","controlledProps","handleCollapse","useCallback","apply","arguments","undefined","role","expandClass","navbarContext","useMemo","Provider","value","SelectableContext","Brand","Text","Register","OnClickSave","FormLayout","validate","isValid","Swal","fire","showCancelButton","text","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","then","res","LoadPanelVisible","data","JSON","stringify","email","jRegistration","password","passwordConfirm","firstName","lastName","mobileNumber","address","isSocial","countryCode","console","log","config","method","url","APIURl","URL","headers","Authorization","localStorage","getItem","serverRequest","axios","response","success","onLoadPanelHiding","message","ReturnToLogin","OnClearForm","error","catch","dismiss","notify","displayTime","at","offset","OnListClickEvent","ListViewing","UserID","FormRef","createRef","to","colCount","formData","dataField","editorOptions","maxLength","colSpan","editorType","notesOptions","displayFormat","mode","icon","color","shadingColor","onHiding","visible","showIndicator","shading","showPane","closeOnOutsideClick","current","instance"],"mappings":"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","file":"static/js/13.aae7db91.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\nimport windowSize from \"react-window-size\";\n\nimport Aux from \"../../hoc/_Aux\";\nimport DEMO from \"../../store/constant\";\n\nclass MainCard extends Component {\n  state = {\n    isOption: this.props.isOption,\n    fullCard: false,\n    collapseCard: false,\n    loadCard: false,\n    cardRemove: false,\n  };\n\n  cardReloadHandler = () => {\n    this.setState({ loadCard: true });\n    setInterval(() => {\n      this.setState({ loadCard: false });\n    }, 3000);\n  };\n\n  cardRemoveHandler = () => {\n    this.setState({ cardRemove: true });\n  };\n\n  render() {\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n    let card = \"\";\n    let cardClass = [];\n\n    if (this.state.isOption) {\n      cardHeaderRight = (\n        <div className=\"card-header-right\">\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n              <i className=\"feather icon-more-horizontal\" />\n            </Dropdown.Toggle>\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={() => {\n                  this.setState((prevState) => {\n                    return { fullCard: !prevState.fullCard };\n                  });\n                }}\n              >\n                <i\n                  className={\n                    this.state.fullCard\n                      ? \"feather icon-minimize\"\n                      : \"feather icon-maximize\"\n                  }\n                />\n                <a href={DEMO.BLANK_LINK}>\n                  {\" \"}\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\n                </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={() => {\n                  this.setState((prevState) => {\n                    return { collapseCard: !prevState.collapseCard };\n                  });\n                }}\n              >\n                <i\n                  className={\n                    this.state.collapseCard\n                      ? \"feather icon-plus\"\n                      : \"feather icon-minus\"\n                  }\n                />\n                <a href={DEMO.BLANK_LINK}>\n                  {\" \"}\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\n                </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={this.cardReloadHandler}\n              >\n                <i className=\"feather icon-refresh-cw\" />\n                <a href={DEMO.BLANK_LINK}> Reload </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={this.cardRemoveHandler}\n              >\n                <i className=\"feather icon-trash\" />\n                <a href={DEMO.BLANK_LINK}> Remove </a>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      );\n    }\n\n    cardHeader = (\n      <Card.Header>\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\n        {cardHeaderRight}\n      </Card.Header>\n    );\n\n    if (this.state.fullCard) {\n      cardClass = [...cardClass, \"full-card\"];\n      fullScreenStyle = {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        width: this.props.windowWidth,\n        height: this.props.windowHeight,\n      };\n    }\n\n    if (this.state.loadCard) {\n      cardClass = [...cardClass, \"card-load\"];\n      loader = (\n        <div className=\"card-loader\">\n          <i className=\"pct-loader1 anim-rotate\" />\n        </div>\n      );\n    }\n\n    if (this.state.cardRemove) {\n      cardClass = [...cardClass, \"d-none\"];\n    }\n\n    if (this.props.cardClass) {\n      cardClass = [...cardClass, this.props.cardClass];\n    }\n\n    card = (\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\n        {cardHeader}\n        <Collapse in={!this.state.collapseCard}>\n          <div>\n            <Card.Body>{this.props.children}</Card.Body>\n          </div>\n        </Collapse>\n        {loader}\n      </Card>\n    );\n\n    return <Aux>{card}</Aux>;\n  }\n}\n\nexport default MainCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar NavbarBrand = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  var Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }));\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar NavbarCollapse = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"bsPrefix\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  return /*#__PURE__*/React.createElement(NavbarContext.Consumer, null, function (context) {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      in: !!(context && context.expanded)\n    }, props), /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref,\n      className: bsPrefix\n    }, children));\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar defaultProps = {\n  label: 'Toggle navigation'\n};\nvar NavbarToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      label = _ref.label,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"label\", \"as\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n\n  var _ref2 = useContext(NavbarContext) || {},\n      onToggle = _ref2.onToggle,\n      expanded = _ref2.expanded;\n\n  var handleClick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed')\n  }), children || /*#__PURE__*/React.createElement(\"span\", {\n    className: bsPrefix + \"-icon\"\n  }));\n});\nNavbarToggle.displayName = 'NavbarToggle';\nNavbarToggle.defaultProps = defaultProps;\nexport default NavbarToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport SelectableContext from './SelectableContext';\nvar NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nvar Navbar = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    expanded: 'onToggle'\n  }),\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      expand = _useUncontrolled.expand,\n      variant = _useUncontrolled.variant,\n      bg = _useUncontrolled.bg,\n      fixed = _useUncontrolled.fixed,\n      sticky = _useUncontrolled.sticky,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n      expanded = _useUncontrolled.expanded,\n      _onToggle = _useUncontrolled.onToggle,\n      onSelect = _useUncontrolled.onSelect,\n      collapseOnSelect = _useUncontrolled.collapseOnSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"children\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  var handleCollapse = useCallback(function () {\n    if (onSelect) onSelect.apply(void 0, arguments);\n\n    if (collapseOnSelect && expanded) {\n      if (_onToggle) {\n        _onToggle(false);\n      }\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  var expandClass = bsPrefix + \"-expand\";\n  if (typeof expand === 'string') expandClass = expandClass + \"-\" + expand;\n  var navbarContext = useMemo(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle && _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: !!expanded\n    };\n  }, [bsPrefix, expanded, _onToggle]);\n  return /*#__PURE__*/React.createElement(NavbarContext.Provider, {\n    value: navbarContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleCollapse\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: classNames(className, bsPrefix, expand && expandClass, variant && bsPrefix + \"-\" + variant, bg && \"bg-\" + bg, sticky && \"sticky-\" + sticky, fixed && \"fixed-\" + fixed)\n  }), children)));\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nNavbar.Brand = NavbarBrand;\nNavbar.Toggle = NavbarToggle;\nNavbar.Collapse = NavbarCollapse;\nNavbar.Text = NavbarText;\nexport default Navbar;","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/_Aux\";\nimport axios from \"axios\";\nimport Form, { Label, Item, RequiredRule } from \"devextreme-react/form\";\nimport \"devextreme-react/text-area\";\nimport Card from \"../../App/components/MainCard\";\nimport { Button, Navbar, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\nimport Swal from \"sweetalert2\";\nimport notify from \"devextreme/ui/notify\";\nimport APIURl from \"../../APIConfig\";\nimport \"./../../assets/scss/style.scss\";\nimport { NavLink, Redirect } from \"react-router-dom\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      UserID: 0,\n      jRegistration: {},\n      LoadPanelVisible: false,\n      ListViewing: false,\n      ReturnToLogin: false,\n    };\n\n    this.FormRef = React.createRef();\n  }\n\n  componentDidMount() {}\n\n  get FormLayout() {\n    return this.FormRef.current.instance;\n  }\n\n  OnClickSave = () => {\n    if (this.FormLayout.validate().isValid == true) {\n      Swal.fire({\n        type: \"info\",\n        showCancelButton: true,\n        text: \"Do you want to save ?\",\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No\",\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n      }).then((res) => {\n        if (res.value) {\n          this.setState({ LoadPanelVisible: true });\n\n          var data = JSON.stringify({\n            email: this.state.jRegistration.email,\n            password: this.state.jRegistration.password,\n            passwordConfirm: this.state.jRegistration.passwordConfirm,\n            firstName: this.state.jRegistration.firstName,\n            lastName: this.state.jRegistration.lastName,\n            mobileNumber: this.state.jRegistration.mobileNumber,\n            address: this.state.jRegistration.address,\n            isSocial: false,\n            countryCode:\"LK\"\n          });\n\n          console.log(\"adasdasd\", data);\n          var config = {\n            method: \"post\",\n            url: `${APIURl.URL}auth/register`,\n            headers: {\n              Authorization:\n                \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n              \"Content-Type\": \"application/json\",\n            },\n            data: data,\n          };\n\n          this.serverRequest = axios(config)\n            .then((response) => {\n              if (response.data.success) {\n                this.onLoadPanelHiding(response.data.message, \"success\");\n                this.setState({ ReturnToLogin: true });\n                this.OnClearForm();\n              } else {\n                this.onLoadPanelHiding(\n                  response.data.error == null\n                    ? response.data.message\n                    : response.data.error,\n                  \"error\"\n                );\n              }\n              //this.OnListClickEvent();\n            })\n            .catch((error) => {\n              this.onLoadPanelHiding(\"Error\", \"error\");\n              console.log(error);\n            });\n        } else if (res.dismiss == \"cancel\") {\n        } else if (res.dismiss == \"esc\") {\n        }\n      });\n    } else {\n      notify({\n        message: \"Fields marked with * are required\",\n        type: \"error\",\n        displayTime: 3000,\n        position: { at: \"top right\", offset: \"50\" },\n      });\n    }\n  };\n\n  OnClearForm = () => {\n    this.setState({\n      jRegistration: {},\n    });\n  };\n\n  onLoadPanelHiding = (message, type) => {\n    this.setState({\n      LoadPanelVisible: false,\n    });\n\n    notify({\n      message: message,\n      type: type,\n      displayTime: 3000,\n      position: { at: \"top right\", offset: \"50\" },\n    });\n  };\n\n  OnListClickEvent = () => {\n    this.setState({ ListViewing: !this.state.ListViewing }, () => {});\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.ReturnToLogin == true ? (\n          <Redirect to={\"/login\"} />\n        ) : (\n          <Aux>\n            <div className=\"auth-wrapper\">\n              <div className=\"auth-conten\">\n                <div className=\"auth-bg\">\n                  <span className=\"r\" />\n                  <span className=\"r s\" />\n                  <span className=\"r s\" />\n                  <span className=\"r\" />\n                </div>\n                <div className=\"card\">\n                  <div className=\"auth-bg\">\n                    <span className=\"r\" />\n                    <span className=\"r s\" />\n                    <span className=\"r s\" />\n                    <span className=\"r\" />\n                  </div>\n                  <Card title=\"User Registration\">\n                    <Form\n                      ref={this.FormRef}\n                      colCount={2}\n                      formData={this.state.jRegistration}\n                    >\n                      <Item\n                        dataField=\"email\"\n                        editorOptions={{\n                          maxLength: 100,\n                        }}\n                      >\n                        <Label text=\"Email\" />\n                      \n                      </Item>\n                      <Item\n                        dataField=\"firstName\"\n                        editorOptions={{\n                          maxLength: 50,\n                        }}\n                      >\n                        <Label text=\"First Name\" />\n                      \n                      </Item>\n\n                      <Item\n                        dataField=\"lastName\"\n                        editorOptions={{\n                          maxLength: 50,\n                        }}\n                      >\n                        <Label text=\"Last Name\" />\n                      \n                      </Item>\n\n                      <Item\n                        dataField=\"mobileNumber\"\n                        editorOptions={{\n                          maxLength: 12,\n                        }}\n                      >\n                        <Label text=\"Mobile Number\" />\n                      </Item>\n\n                      <Item\n                        colSpan={2}\n                        dataField=\"address\"\n                        editorType=\"dxTextArea\"\n                        editorOptions={this.notesOptions}\n                      >\n                        <Label text=\"Address\" />\n                      \n                      </Item>\n\n                      <Item\n                        dataField=\"password\"\n                        displayFormat=\"#\"\n                        editorOptions={{\n                          mode: \"password\",\n                        }}\n                      >\n                        <Label text=\"Password\" />\n                       \n                      </Item>\n\n                      <Item\n                        dataField=\"passwordConfirm\"\n                        displayFormat=\"#\"\n                        editorOptions={{\n                          mode: \"password\",\n                        }}\n                      >\n                        <Label text=\"Confirm Password\" />\n                    \n                      </Item>\n                    </Form>\n\n                    <Navbar bg=\"\" variant=\"light\">\n                      <Button\n                        variant=\"success\"\n                        icon=\"feather icon-layers\"\n                        onClick={this.OnClickSave}\n                      >\n                        Save\n                      </Button>\n                      <Button variant=\"warning\" icon=\"feather icon-layers\">\n                        Clear\n                      </Button>\n\n                      <Button\n                        type=\"button\"\n                        style={{ color: \"white\" }}\n                        variant=\"primary\"\n                        href=\"/login\"\n                        icon=\"feather icon-layers\"\n                      >\n                        Login\n                      </Button>\n                    </Navbar>\n                  </Card>\n                </div>\n              </div>\n            </div>\n            <LoadPanel\n              message=\"Processing.... Please, wait...\"\n              shadingColor=\"rgba(0,0,0,0.4)\"\n              onHiding={this.onLoadPanelHiding}\n              visible={this.state.LoadPanelVisible}\n              showIndicator={true}\n              shading={true}\n              showPane={true}\n              closeOnOutsideClick={false}\n              width={500}\n            />\n          </Aux>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Register;\n"],"sourceRoot":""}