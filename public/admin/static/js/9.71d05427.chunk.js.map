{"version":3,"sources":["App/components/MainCard.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","component/Category/SubCategory.jsx"],"names":["MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","Component","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","SubCategory","OnClickSave","FormLayout","validate","isValid","Swal","fire","type","showCancelButton","text","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","then","res","LoadPanelVisible","data","JSON","stringify","email","jRegistration","password","passwordConfirm","firstName","lastName","mobileNumber","address","isSocial","console","log","config","method","url","APIURl","URL","headers","Authorization","localStorage","getItem","serverRequest","axios","response","success","onLoadPanelHiding","message","componentDidMount","OnClearForm","error","catch","dismiss","notify","displayTime","at","offset","OnListClickEvent","ListViewing","onInitNewRow","masterCategoryId","name","onRowRemoved","subCategoryId","key","MasterCategoryID","jMasterCategory","jSubCategory","FormRef","React","createRef","subCat","map","subCategory","val","push","ref","GridRef","dataSource","keyExpr","showBorders","allowSearch","onRowInserting","mode","useIcons","allowDeleting","allowAdding","showTitle","dataField","caption","groupIndex","valueExpr","displayExpr","shadingColor","onHiding","visible","showIndicator","shading","showPane","closeOnOutsideClick","current","instance"],"mappings":"gQAOMA,E,4MACJC,MAAQ,CACNC,SAAU,EAAKC,MAAMD,SACrBE,UAAU,EACVC,cAAc,EACdC,UAAU,EACVC,YAAY,G,EAGdC,kBAAoB,WAClB,EAAKC,SAAS,CAAEH,UAAU,IAC1BI,aAAY,WACV,EAAKD,SAAS,CAAEH,UAAU,MACzB,M,EAGLK,kBAAoB,WAClB,EAAKF,SAAS,CAAEF,YAAY,K,uDAGpB,IACJK,EAAiBC,EAAQC,EAAiBC,EAC1CC,EAFG,OAGHC,EAAY,GA0HhB,OAxHIC,KAAKjB,MAAMC,WACbY,EACE,yBAAKK,UAAU,qBACb,kBAAC,IAAD,CAAUC,YAAY,EAAMD,UAAU,yBACpC,kBAAC,IAASE,OAAV,CAAiBC,GAAG,iBAAiBH,UAAU,YAC7C,uBAAGA,UAAU,kCAEf,kBAAC,IAASI,KAAV,CAAeC,GAAG,KAAKL,UAAU,6BAC/B,kBAAC,IAASM,KAAV,CACED,GAAG,KACHL,UAAU,gBACVO,QAAS,WACP,EAAKjB,UAAS,SAACkB,GACb,MAAO,CAAEvB,UAAWuB,EAAUvB,eAIlC,uBACEe,UACED,KAAKjB,MAAMG,SACP,wBACA,0BAGR,uBAAGwB,KAAMC,IAAKC,YACX,IACAZ,KAAKjB,MAAMG,SAAW,UAAY,WAAY,MAGnD,kBAAC,IAASqB,KAAV,CACED,GAAG,KACHL,UAAU,gBACVO,QAAS,WACP,EAAKjB,UAAS,SAACkB,GACb,MAAO,CAAEtB,cAAesB,EAAUtB,mBAItC,uBACEc,UACED,KAAKjB,MAAMI,aACP,oBACA,uBAGR,uBAAGuB,KAAMC,IAAKC,YACX,IACAZ,KAAKjB,MAAMI,aAAe,SAAW,WAAY,MAGtD,kBAAC,IAASoB,KAAV,CACED,GAAG,KACHL,UAAU,gBACVO,QAASR,KAAKV,mBAEd,uBAAGW,UAAU,4BACb,uBAAGS,KAAMC,IAAKC,YAAd,aAEF,kBAAC,IAASL,KAAV,CACED,GAAG,KACHL,UAAU,gBACVO,QAASR,KAAKP,mBAEd,uBAAGQ,UAAU,uBACb,uBAAGS,KAAMC,IAAKC,YAAd,iBAQZf,EACE,kBAAC,IAAKgB,OAAN,KACE,kBAAC,IAAKC,MAAN,CAAYR,GAAG,MAAMN,KAAKf,MAAM8B,OAC/BnB,GAIDI,KAAKjB,MAAMG,WACba,EAAS,sBAAOA,GAAP,CAAkB,cAC3BL,EAAkB,CAChBsB,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,MAAOpB,KAAKf,MAAMoC,YAClBC,OAAQtB,KAAKf,MAAMsC,eAInBvB,KAAKjB,MAAMK,WACbW,EAAS,sBAAOA,GAAP,CAAkB,cAC3BJ,EACE,yBAAKM,UAAU,eACb,uBAAGA,UAAU,8BAKfD,KAAKjB,MAAMM,aACbU,EAAS,sBAAOA,GAAP,CAAkB,YAGzBC,KAAKf,MAAMc,YACbA,EAAS,sBAAOA,GAAP,CAAkBC,KAAKf,MAAMc,aAGxCD,EACE,kBAAC,IAAD,CAAMG,UAAWF,EAAUyB,KAAK,KAAMC,MAAO/B,GAC1CG,EACD,kBAAC,IAAD,CAAU6B,IAAK1B,KAAKjB,MAAMI,cACxB,6BACE,kBAAC,IAAKwC,KAAN,KAAY3B,KAAKf,MAAM2C,YAG1BjC,GAIE,kBAAC,IAAD,KAAMG,O,GAjJM+B,aAqJR/C,O,kCC5Jf,+CACe,SAASgD,EAA2BC,GACjD,GAAsB,qBAAXC,QAAgD,MAAtBD,EAAEC,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQJ,KAAOA,EAAI,YAA2BA,IAAK,CAC3D,IAAIK,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKL,EAAES,OAAe,CACxBC,MAAM,GAED,CACLA,MAAM,EACNC,MAAOX,EAAEK,OAGbO,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGR,GAIP,MAAM,IAAIS,UAAU,yIAGtB,IAAIC,EAGAC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLZ,EAAG,WACDS,EAAKhB,EAAEC,OAAOC,aAEhBM,EAAG,WACD,IAAIY,EAAOJ,EAAGK,OAEd,OADAH,EAAmBE,EAAKV,KACjBU,GAETR,EAAG,SAAWU,GACZH,GAAS,EACTF,EAAMK,GAERR,EAAG,WACD,IACOI,GAAoC,MAAhBF,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIG,EAAQ,MAAMF,O,4OC9BpBM,E,kDACJ,WAAYrE,GAAQ,IAAD,8BACjB,cAAMA,IA+DRsE,YAAc,WAC8B,GAAtC,EAAKC,WAAWC,WAAWC,QAC7BC,IAAKC,KAAK,CACRC,KAAM,OACNC,kBAAkB,EAClBC,KAAM,wBACNC,kBAAmB,MACnBC,iBAAkB,KAClBC,mBAAmB,EACnBC,gBAAgB,IACfC,MAAK,SAACC,GACP,GAAIA,EAAI3B,MAAO,CACb,EAAKnD,SAAS,CAAE+E,kBAAkB,IAElC,IAAIC,EAAOC,KAAKC,UAAU,CACxBC,MAAO,EAAK3F,MAAM4F,cAAcD,MAChCE,SAAU,EAAK7F,MAAM4F,cAAcC,SACnCC,gBAAiB,EAAK9F,MAAM4F,cAAcE,gBAC1CC,UAAW,EAAK/F,MAAM4F,cAAcG,UACpCC,SAAU,EAAKhG,MAAM4F,cAAcI,SACnCC,aAAc,EAAKjG,MAAM4F,cAAcK,aACvCC,QAAS,EAAKlG,MAAM4F,cAAcM,QAClCC,UAAU,IAGZC,QAAQC,IAAI,WAAYb,GACxB,IAAIc,EAAS,CACXC,OAAQ,OACRC,IAAI,GAAD,OAAKC,IAAOC,IAAZ,uBACHC,QAAS,CACPC,cACE,UAAYC,aAAaC,QAAQ,eACnC,eAAgB,oBAElBtB,KAAMA,GAGR,EAAKuB,cAAgBC,IAAMV,GACxBjB,MAAK,SAAC4B,GACDA,EAASzB,KAAK0B,SAChB,EAAKC,kBAAkBF,EAASzB,KAAK4B,QAAS,WAC9C,EAAKC,oBACL,EAAKC,eAEL,EAAKH,kBACoB,MAAvBF,EAASzB,KAAK+B,MACVN,EAASzB,KAAK4B,QACdH,EAASzB,KAAK+B,MAClB,YAKLC,OAAM,SAACD,GACN,EAAKJ,kBAAkB,QAAS,SAChCf,QAAQC,IAAIkB,UAEQ,UAAfjC,EAAImC,SACJnC,EAAImC,WAIjBC,IAAO,CACLN,QAAS,oCACTtC,KAAM,QACN6C,YAAa,IACb1F,SAAU,CAAE2F,GAAI,YAAaC,OAAQ,SAlIxB,EAuInBP,YAAc,WACZ,EAAK9G,SAAS,CACZoF,cAAe,MAzIA,EA6InBuB,kBAAoB,SAACC,EAAStC,GAC5B,EAAKtE,SAAS,CACZ+E,kBAAkB,IAGpBmC,IAAO,CACLN,QAASA,EACTtC,KAAMA,EACN6C,YAAa,IACb1F,SAAU,CAAE2F,GAAI,YAAaC,OAAQ,SAtJtB,EA0JnBC,iBAAmB,WACjB,EAAKtH,SAAS,CAAEuH,aAAc,EAAK/H,MAAM+H,cAAe,gBA3JvC,EA6JnBC,aAAe,SAACpE,GACdgB,IAAKC,KAAK,CACRC,KAAM,OACNC,kBAAkB,EAClBC,KAAM,wBACNC,kBAAmB,MACnBC,iBAAkB,KAClBC,mBAAmB,EACnBC,gBAAgB,IACfC,MAAK,SAACC,GACP,GAAIA,EAAI3B,MAAO,CACb,EAAKnD,SAAS,CAAE+E,kBAAkB,IAElC,IAAIC,EAAOC,KAAKC,UAAU,CACxBuC,iBAAkBrE,EAAE4B,KAAKyC,iBACzBC,KAAMtE,EAAE4B,KAAK0C,OAGX5B,EAAS,CACXC,OAAQ,OACRC,IAAI,GAAD,OAAKC,IAAOC,IAAZ,4BACHC,QAAS,CACPC,cAAe,UAAYC,aAAaC,QAAQ,eAChD,eAAgB,oBAElBtB,KAAMA,GAGR,EAAKuB,cAAgBC,IAAMV,GACxBjB,MAAK,SAAC4B,GACDA,EAASzB,KAAK0B,QAChB,EAAKC,kBAAkBF,EAASzB,KAAK4B,QAAS,WAE9C,EAAKD,kBACoB,MAAvBF,EAASzB,KAAK+B,MACVN,EAASzB,KAAK4B,QACdH,EAASzB,KAAK+B,MAClB,YAILC,OAAM,SAACD,GACN,EAAKJ,kBAAkB,QAAS,SAChCf,QAAQC,IAAIkB,UAEQ,UAAfjC,EAAImC,SACJnC,EAAImC,YA3MA,EAgNnBU,aAAe,SAACvE,GACd,EAAKpD,SAAS,CAAE+E,kBAAkB,IAElCa,QAAQC,IAAI,OAAQzC,GACpB,IAAI4B,EAAOC,KAAKC,UAAU,CACxB0C,cAAexE,EAAEyE,MAGf/B,EAAS,CACXC,OAAQ,SACRC,IAAI,GAAD,OAAKC,IAAOC,IAAZ,+BACHC,QAAS,CACPC,cAAe,UAAYC,aAAaC,QAAQ,eAChD,eAAgB,oBAElBtB,KAAMA,GAGR,EAAKuB,cAAgBC,IAAMV,GACxBjB,MAAK,SAAC4B,GACDA,EAASzB,KAAK0B,QAChB,EAAKC,kBAAkBF,EAASzB,KAAK4B,QAAS,WAE9C,EAAKD,kBACoB,MAAvBF,EAASzB,KAAK+B,MACVN,EAASzB,KAAK4B,QACdH,EAASzB,KAAK+B,MAClB,YAILC,OAAM,SAACD,GACN,EAAKJ,kBAAkB,QAAS,SAChCf,QAAQC,IAAIkB,OA9OhB,EAAKvH,MAAQ,CACXsI,iBAAkB,EAClBC,gBAAiB,GACjBC,aAAc,GACdjD,kBAAkB,EAClBwC,aAAa,GAGf,EAAKU,QAAUC,IAAMC,YAXJ,E,gEAcE,IAAD,OACdrC,EAAS,CACXC,OAAQ,MACRC,IAAI,GAAD,OAAKC,IAAOC,IAAZ,YACHC,QAAS,CACPC,cAAe,UAAYC,aAAaC,QAAQ,eAChD,eAAgB,qBAIpB7F,KAAK8F,cAAgBC,IAAMV,GACxBjB,MAAK,SAAC4B,GACL,GAAIA,EAASzB,KAAK0B,QAAS,CACzB,IAAI0B,EAAS,GACb3B,EAASzB,KAAKA,KAAKqD,KAAI,SAAClF,GACtB,GAAIA,EAAMmF,YAAYrF,OAAS,EAAG,CAChC2C,QAAQC,MADwB,oBAEd1C,EAAMmF,aAFQ,IAEhC,2BAAqC,CAAC,IAA3BC,EAA0B,QACnC3C,QAAQC,IAAI0C,GACZH,EAAOI,KAAKD,IAJkB,mCASpC,EAAKvI,SAAS,CACZ+H,gBAAiBtB,EAASzB,KAAKA,KAC/BgD,aAAcI,SAGhB,EAAKzB,kBACoB,MAAvBF,EAASzB,KAAK+B,MACVN,EAASzB,KAAK4B,QACdH,EAASzB,KAAK+B,MAClB,SAIJnB,QAAQC,IAAI,0BAA2B,EAAKrG,UAG7CwH,OAAM,SAACD,GACN,EAAKJ,kBAAkB,QAAS,SAChCf,QAAQC,IAAIkB,Q,+BA8LhB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMvF,MAAM,gBACV,kBAAC,IAAD,CACEX,GAAG,eACH4H,IAAKhI,KAAKiI,QACVC,WAAYlI,KAAKjB,MAAMwI,aACvBY,QAAQ,MACRC,aAAa,EACbC,aAAa,EACbC,eAAgBtI,KAAK+G,aACrBG,aAAclH,KAAKkH,cAEnB,kBAAC,UAAD,CACEqB,KAAK,QACLC,UAAU,EACVC,eAAe,EACfC,aAAa,GAEb,kBAAC,QAAD,CAAO3H,MAAM,oBAAoB4H,WAAW,KAE9C,kBAAC,SAAD,CACEC,UAAU,mBACVC,QAAQ,gBACRC,WAAY,GAEZ,kBAAC,SAAD,CACEZ,WAAYlI,KAAKjB,MAAMuI,gBACvByB,UAAU,MACVC,YAAY,SAEd,kBAAC,eAAD,OAEF,kBAAC,SAAD,CAAQJ,UAAU,OAAOC,QAAQ,gBAC/B,kBAAC,eAAD,SAKN,kBAAC,YAAD,CACE1C,QAAQ,iCACR8C,aAAa,kBACbC,SAAUlJ,KAAKkG,kBACfiD,QAASnJ,KAAKjB,MAAMuF,iBACpB8E,eAAe,EACfC,SAAS,EACTC,UAAU,EACVC,qBAAqB,EACrBnI,MAAO,S,iCAzOb,OAAOpB,KAAKwH,QAAQgC,QAAQC,a,GA9DN5H,aA8SXyB","file":"static/js/9.71d05427.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\nimport windowSize from \"react-window-size\";\n\nimport Aux from \"../../hoc/_Aux\";\nimport DEMO from \"../../store/constant\";\n\nclass MainCard extends Component {\n  state = {\n    isOption: this.props.isOption,\n    fullCard: false,\n    collapseCard: false,\n    loadCard: false,\n    cardRemove: false,\n  };\n\n  cardReloadHandler = () => {\n    this.setState({ loadCard: true });\n    setInterval(() => {\n      this.setState({ loadCard: false });\n    }, 3000);\n  };\n\n  cardRemoveHandler = () => {\n    this.setState({ cardRemove: true });\n  };\n\n  render() {\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n    let card = \"\";\n    let cardClass = [];\n\n    if (this.state.isOption) {\n      cardHeaderRight = (\n        <div className=\"card-header-right\">\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n              <i className=\"feather icon-more-horizontal\" />\n            </Dropdown.Toggle>\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={() => {\n                  this.setState((prevState) => {\n                    return { fullCard: !prevState.fullCard };\n                  });\n                }}\n              >\n                <i\n                  className={\n                    this.state.fullCard\n                      ? \"feather icon-minimize\"\n                      : \"feather icon-maximize\"\n                  }\n                />\n                <a href={DEMO.BLANK_LINK}>\n                  {\" \"}\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\n                </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={() => {\n                  this.setState((prevState) => {\n                    return { collapseCard: !prevState.collapseCard };\n                  });\n                }}\n              >\n                <i\n                  className={\n                    this.state.collapseCard\n                      ? \"feather icon-plus\"\n                      : \"feather icon-minus\"\n                  }\n                />\n                <a href={DEMO.BLANK_LINK}>\n                  {\" \"}\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\n                </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={this.cardReloadHandler}\n              >\n                <i className=\"feather icon-refresh-cw\" />\n                <a href={DEMO.BLANK_LINK}> Reload </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={this.cardRemoveHandler}\n              >\n                <i className=\"feather icon-trash\" />\n                <a href={DEMO.BLANK_LINK}> Remove </a>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      );\n    }\n\n    cardHeader = (\n      <Card.Header>\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\n        {cardHeaderRight}\n      </Card.Header>\n    );\n\n    if (this.state.fullCard) {\n      cardClass = [...cardClass, \"full-card\"];\n      fullScreenStyle = {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        width: this.props.windowWidth,\n        height: this.props.windowHeight,\n      };\n    }\n\n    if (this.state.loadCard) {\n      cardClass = [...cardClass, \"card-load\"];\n      loader = (\n        <div className=\"card-loader\">\n          <i className=\"pct-loader1 anim-rotate\" />\n        </div>\n      );\n    }\n\n    if (this.state.cardRemove) {\n      cardClass = [...cardClass, \"d-none\"];\n    }\n\n    if (this.props.cardClass) {\n      cardClass = [...cardClass, this.props.cardClass];\n    }\n\n    card = (\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\n        {cardHeader}\n        <Collapse in={!this.state.collapseCard}>\n          <div>\n            <Card.Body>{this.props.children}</Card.Body>\n          </div>\n        </Collapse>\n        {loader}\n      </Card>\n    );\n\n    return <Aux>{card}</Aux>;\n  }\n}\n\nexport default MainCard;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/_Aux\";\nimport axios from \"axios\";\nimport \"devextreme-react/text-area\";\nimport Card from \"../../App/components/MainCard\";\nimport { Button, Navbar, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\nimport Swal from \"sweetalert2\";\nimport notify from \"devextreme/ui/notify\";\nimport APIURl from \"../../APIConfig\";\n\nimport DataGrid, {\n  Column,\n  Editing,\n  MasterDetail,\n  Popup,\n  RequiredRule,\n  Lookup,\n} from \"devextreme-react/data-grid\";\n\nclass SubCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      MasterCategoryID: 0,\n      jMasterCategory: [],\n      jSubCategory: [],\n      LoadPanelVisible: false,\n      ListViewing: false,\n    };\n\n    this.FormRef = React.createRef();\n  }\n\n  componentDidMount() {\n    var config = {\n      method: \"get\",\n      url: `${APIURl.URL}category`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    this.serverRequest = axios(config)\n      .then((response) => {\n        if (response.data.success) {\n          let subCat = [];\n          response.data.data.map((value) => {\n            if (value.subCategory.length > 0) {\n              console.log();\n              for (const val of value.subCategory) {\n                console.log(val);\n                subCat.push(val);\n              }\n            }\n          });\n\n          this.setState({\n            jMasterCategory: response.data.data,\n            jSubCategory: subCat,\n          });\n        } else {\n          this.onLoadPanelHiding(\n            response.data.error == null\n              ? response.data.message\n              : response.data.error,\n            \"error\"\n          );\n        }\n\n        console.log(\"-----------------------\", this.state);\n        //this.OnListClickEvent();\n      })\n      .catch((error) => {\n        this.onLoadPanelHiding(\"Error\", \"error\");\n        console.log(error);\n      });\n  }\n\n  get FormLayout() {\n    return this.FormRef.current.instance;\n  }\n\n  OnClickSave = () => {\n    if (this.FormLayout.validate().isValid == true) {\n      Swal.fire({\n        type: \"info\",\n        showCancelButton: true,\n        text: \"Do you want to save ?\",\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No\",\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n      }).then((res) => {\n        if (res.value) {\n          this.setState({ LoadPanelVisible: true });\n\n          var data = JSON.stringify({\n            email: this.state.jRegistration.email,\n            password: this.state.jRegistration.password,\n            passwordConfirm: this.state.jRegistration.passwordConfirm,\n            firstName: this.state.jRegistration.firstName,\n            lastName: this.state.jRegistration.lastName,\n            mobileNumber: this.state.jRegistration.mobileNumber,\n            address: this.state.jRegistration.address,\n            isSocial: false,\n          });\n\n          console.log(\"adasdasd\", data);\n          var config = {\n            method: \"post\",\n            url: `${APIURl.URL}auth/register/admin`,\n            headers: {\n              Authorization:\n                \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n              \"Content-Type\": \"application/json\",\n            },\n            data: data,\n          };\n\n          this.serverRequest = axios(config)\n            .then((response) => {\n              if (response.data.success) {\n                this.onLoadPanelHiding(response.data.message, \"success\");\n                this.componentDidMount();\n                this.OnClearForm();\n              } else {\n                this.onLoadPanelHiding(\n                  response.data.error == null\n                    ? response.data.message\n                    : response.data.error,\n                  \"error\"\n                );\n              }\n              //this.OnListClickEvent();\n            })\n            .catch((error) => {\n              this.onLoadPanelHiding(\"Error\", \"error\");\n              console.log(error);\n            });\n        } else if (res.dismiss == \"cancel\") {\n        } else if (res.dismiss == \"esc\") {\n        }\n      });\n    } else {\n      notify({\n        message: \"Fields marked with * are required\",\n        type: \"error\",\n        displayTime: 3000,\n        position: { at: \"top right\", offset: \"50\" },\n      });\n    }\n  };\n\n  OnClearForm = () => {\n    this.setState({\n      jRegistration: {},\n    });\n  };\n\n  onLoadPanelHiding = (message, type) => {\n    this.setState({\n      LoadPanelVisible: false,\n    });\n\n    notify({\n      message: message,\n      type: type,\n      displayTime: 3000,\n      position: { at: \"top right\", offset: \"50\" },\n    });\n  };\n\n  OnListClickEvent = () => {\n    this.setState({ ListViewing: !this.state.ListViewing }, () => {});\n  };\n  onInitNewRow = (e) => {\n    Swal.fire({\n      type: \"info\",\n      showCancelButton: true,\n      text: \"Do you want to save ?\",\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"No\",\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n    }).then((res) => {\n      if (res.value) {\n        this.setState({ LoadPanelVisible: true });\n\n        var data = JSON.stringify({\n          masterCategoryId: e.data.masterCategoryId,\n          name: e.data.name,\n        });\n\n        var config = {\n          method: \"post\",\n          url: `${APIURl.URL}category/add/subCategory`,\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n            \"Content-Type\": \"application/json\",\n          },\n          data: data,\n        };\n\n        this.serverRequest = axios(config)\n          .then((response) => {\n            if (response.data.success) {\n              this.onLoadPanelHiding(response.data.message, \"success\");\n            } else {\n              this.onLoadPanelHiding(\n                response.data.error == null\n                  ? response.data.message\n                  : response.data.error,\n                \"error\"\n              );\n            }\n          })\n          .catch((error) => {\n            this.onLoadPanelHiding(\"Error\", \"error\");\n            console.log(error);\n          });\n      } else if (res.dismiss == \"cancel\") {\n      } else if (res.dismiss == \"esc\") {\n      }\n    });\n  };\n\n  onRowRemoved = (e) => {\n    this.setState({ LoadPanelVisible: true });\n\n    console.log(\"daat\", e);\n    var data = JSON.stringify({\n      subCategoryId: e.key,\n    });\n\n    var config = {\n      method: \"delete\",\n      url: `${APIURl.URL}category/delete/subCategory`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    this.serverRequest = axios(config)\n      .then((response) => {\n        if (response.data.success) {\n          this.onLoadPanelHiding(response.data.message, \"success\");\n        } else {\n          this.onLoadPanelHiding(\n            response.data.error == null\n              ? response.data.message\n              : response.data.error,\n            \"error\"\n          );\n        }\n      })\n      .catch((error) => {\n        this.onLoadPanelHiding(\"Error\", \"error\");\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Card title=\"Sub Category\">\n          <DataGrid\n            id=\"grid-subject\"\n            ref={this.GridRef}\n            dataSource={this.state.jSubCategory}\n            keyExpr=\"_id\"\n            showBorders={true}\n            allowSearch={true}\n            onRowInserting={this.onInitNewRow}\n            onRowRemoved={this.onRowRemoved}\n          >\n            <Editing\n              mode=\"popup\"\n              useIcons={true}\n              allowDeleting={true}\n              allowAdding={true}\n            >\n              <Popup title=\"Add Main Category\" showTitle={true}></Popup>\n            </Editing>\n            <Column\n              dataField=\"masterCategoryId\"\n              caption=\"Main Category\"\n              groupIndex={0}\n            >\n              <Lookup\n                dataSource={this.state.jMasterCategory}\n                valueExpr=\"_id\"\n                displayExpr=\"name\"\n              />\n              <RequiredRule />\n            </Column>\n            <Column dataField=\"name\" caption=\"Sub Category\">\n              <RequiredRule />\n            </Column>\n          </DataGrid>\n        </Card>\n\n        <LoadPanel\n          message=\"Processing.... Please, wait...\"\n          shadingColor=\"rgba(0,0,0,0.4)\"\n          onHiding={this.onLoadPanelHiding}\n          visible={this.state.LoadPanelVisible}\n          showIndicator={true}\n          shading={true}\n          showPane={true}\n          closeOnOutsideClick={false}\n          width={500}\n        />\n      </Aux>\n    );\n  }\n}\n\nexport default SubCategory;\n"],"sourceRoot":""}