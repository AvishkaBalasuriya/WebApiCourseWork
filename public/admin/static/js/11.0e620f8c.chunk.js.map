{"version":3,"sources":["App/components/MainCard.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","DataLists/ItemList.jsx","component/Item/Items.jsx"],"names":["MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","Component","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","ImageList","onSelectionChanged","SelectID","selectedRowsData","_id","onSelectClick","OnHide","onCloseClick","jList","console","log","ItemList","Modal","size","show","Show","onHide","backdrop","keyboard","closeButton","dataSource","keyExpr","showBorders","wordWrapEnabled","allowSearch","selection","mode","hoverStateEnabled","visible","defaultPageSize","dataField","caption","Button","variant","icon","Items","OnClickSave","FormLayout","validate","isValid","Swal","fire","type","showCancelButton","text","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","then","res","LoadPanelVisible","data","FormData","append","jItems","vendorId","masterCategoryId","subCategoryId","name","description","price","discount","isAvailable","status","File","forEach","element","ItemID","config","method","url","APIURl","URL","headers","Authorization","localStorage","getItem","jlRemovedImage","productId","JSON","stringify","serverRequest","axios","response","success","onLoadPanelHiding","message","componentDidMount","OnClearForm","error","catch","dismiss","notify","displayTime","at","offset","jlItem","ListViewing","jMasterCategory","jSubCategory","jVender","jlImageView","jlImageId","OnListClickEvent","onValueChanged","OnLoadData","onRowRemoved","push","key","FormRef","React","createRef","config2","subCat","map","subCategory","val","cellData","padding","src","filterDate","filterImage","filterImageID","vendor","masterCategory","images","imageUrl","ref","colCount","formData","editorOptions","maxLength","editorType","items","valueExpr","displayExpr","colSpan","notesOptions","format","multiple","uploadMode","allowCanceling","allowedFileExtensions","GridRef","useIcons","allowDeleting","showTitle","cellRender","renderGridCell","slideshowDelay","loop","showNavButtons","showIndicator","Navbar","bg","shadingColor","onHiding","shading","showPane","closeOnOutsideClick","current","instance"],"mappings":"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","file":"static/js/11.0e620f8c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\nimport windowSize from \"react-window-size\";\n\nimport Aux from \"../../hoc/_Aux\";\nimport DEMO from \"../../store/constant\";\n\nclass MainCard extends Component {\n  state = {\n    isOption: this.props.isOption,\n    fullCard: false,\n    collapseCard: false,\n    loadCard: false,\n    cardRemove: false,\n  };\n\n  cardReloadHandler = () => {\n    this.setState({ loadCard: true });\n    setInterval(() => {\n      this.setState({ loadCard: false });\n    }, 3000);\n  };\n\n  cardRemoveHandler = () => {\n    this.setState({ cardRemove: true });\n  };\n\n  render() {\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n    let card = \"\";\n    let cardClass = [];\n\n    if (this.state.isOption) {\n      cardHeaderRight = (\n        <div className=\"card-header-right\">\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n              <i className=\"feather icon-more-horizontal\" />\n            </Dropdown.Toggle>\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={() => {\n                  this.setState((prevState) => {\n                    return { fullCard: !prevState.fullCard };\n                  });\n                }}\n              >\n                <i\n                  className={\n                    this.state.fullCard\n                      ? \"feather icon-minimize\"\n                      : \"feather icon-maximize\"\n                  }\n                />\n                <a href={DEMO.BLANK_LINK}>\n                  {\" \"}\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\n                </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={() => {\n                  this.setState((prevState) => {\n                    return { collapseCard: !prevState.collapseCard };\n                  });\n                }}\n              >\n                <i\n                  className={\n                    this.state.collapseCard\n                      ? \"feather icon-plus\"\n                      : \"feather icon-minus\"\n                  }\n                />\n                <a href={DEMO.BLANK_LINK}>\n                  {\" \"}\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\n                </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={this.cardReloadHandler}\n              >\n                <i className=\"feather icon-refresh-cw\" />\n                <a href={DEMO.BLANK_LINK}> Reload </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={this.cardRemoveHandler}\n              >\n                <i className=\"feather icon-trash\" />\n                <a href={DEMO.BLANK_LINK}> Remove </a>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      );\n    }\n\n    cardHeader = (\n      <Card.Header>\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\n        {cardHeaderRight}\n      </Card.Header>\n    );\n\n    if (this.state.fullCard) {\n      cardClass = [...cardClass, \"full-card\"];\n      fullScreenStyle = {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        width: this.props.windowWidth,\n        height: this.props.windowHeight,\n      };\n    }\n\n    if (this.state.loadCard) {\n      cardClass = [...cardClass, \"card-load\"];\n      loader = (\n        <div className=\"card-loader\">\n          <i className=\"pct-loader1 anim-rotate\" />\n        </div>\n      );\n    }\n\n    if (this.state.cardRemove) {\n      cardClass = [...cardClass, \"d-none\"];\n    }\n\n    if (this.props.cardClass) {\n      cardClass = [...cardClass, this.props.cardClass];\n    }\n\n    card = (\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\n        {cardHeader}\n        <Collapse in={!this.state.collapseCard}>\n          <div>\n            <Card.Body>{this.props.children}</Card.Body>\n          </div>\n        </Collapse>\n        {loader}\n      </Card>\n    );\n\n    return <Aux>{card}</Aux>;\n  }\n}\n\nexport default MainCard;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { Component, Fragment } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"react-bootstrap\";\nimport DataGrid, {\n  Column,\n  SearchPanel,\n  GroupPanel,\n  Paging,\n} from \"devextreme-react/data-grid\";\nimport axios from \"axios\";\n\nexport class ImageList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      SelectID: 0,\n      jList: [],\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"User\", this.props.ItemList);\n  }\n\n  onSelectionChanged = (e) => {\n    this.setState({ SelectID: e.selectedRowsData[0]._id });\n  };\n\n  onSelectClick = (e) => {\n    this.props.OnHide(this.state.SelectID);\n  };\n\n  onCloseClick = (e) => {\n    this.props.OnHide(0);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Modal\n          size=\"xl\"\n          show={this.props.Show}\n          onHide={this.onCloseClick}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>List of Items</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <DataGrid\n              id=\"grid-list\"\n              dataSource={this.props.ItemList}\n              keyExpr=\"_id\"\n              showBorders={true}\n              wordWrapEnabled={true}\n              allowSearch={true}\n              selection={{ mode: \"single\" }}\n              hoverStateEnabled={true}\n              onSelectionChanged={this.onSelectionChanged}\n            >\n              <SearchPanel visible={true} />\n              <GroupPanel visible={true} />\n              <Paging defaultPageSize={20} />\n              <Column dataField=\"_id\" visible={false} />\n              <Column dataField=\"name\" caption=\"Item Name\" />\n            </DataGrid>\n\n            <br></br>\n            <br></br>\n\n            <Button variant=\"secondary\" onClick={this.onSelectClick}>\n              Open\n            </Button>\n            <Button\n              variant=\"secondary\"\n              onClick={this.onCloseClick}\n              icon=\"feather icon-layers\"\n            >\n              Close\n            </Button>\n          </Modal.Body>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default ImageList;\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/_Aux\";\nimport axios from \"axios\";\nimport Form, { Label, Item, RequiredRule } from \"devextreme-react/form\";\nimport \"devextreme-react/text-area\";\nimport Card from \"../../App/components/MainCard\";\nimport { Button, Navbar, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\nimport Swal from \"sweetalert2\";\nimport notify from \"devextreme/ui/notify\";\nimport APIURl from \"../../APIConfig\";\nimport FileUploader from \"devextreme-react/file-uploader\";\nimport ProgressBar from \"devextreme-react/progress-bar\";\nimport List from \"../../DataLists/ItemList\";\nimport Gallery from \"devextreme-react/gallery\";\nimport DataGrid, {\n  Column,\n  Editing,\n  MasterDetail,\n  Popup,\n  Lookup,\n  Scrolling,\n  Paging,\n  Selection,\n  SearchPanel,\n  Summary,\n  TotalItem,\n} from \"devextreme-react/data-grid\";\nclass Items extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ItemID: 0,\n      jItems: {},\n      jlItem: [],\n      LoadPanelVisible: false,\n      ListViewing: false,\n      jMasterCategory: [],\n      jSubCategory: [],\n      jVender: [],\n      File: [],\n      jlImageView: [],\n      jlImageId: [],\n      jlRemovedImage: [],\n    };\n\n    this.FormRef = React.createRef();\n  }\n\n  componentDidMount() {\n    var config = {\n      method: \"get\",\n      url: `${APIURl.URL}category`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    var config2 = {\n      method: \"get\",\n      url: `${APIURl.URL}vendor`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    this.serverRequest = axios(config)\n      .then((response) => {\n        if (response.data.success) {\n          let subCat = [];\n          response.data.data.map((value) => {\n            if (value.subCategory.length > 0) {\n              console.log();\n              for (const val of value.subCategory) {\n                subCat.push(val);\n              }\n            }\n          });\n\n          this.setState({\n            jMasterCategory: response.data.data,\n            jSubCategory: subCat,\n          });\n        } else {\n          this.onLoadPanelHiding(\n            response.data.error == null\n              ? response.data.message\n              : response.data.error,\n            \"error\"\n          );\n        }\n      })\n      .catch((error) => {\n        this.onLoadPanelHiding(\"Error\", \"error\");\n        console.log(error);\n      });\n\n    this.serverRequest = axios(config2)\n      .then((response) => {\n        if (response.data.success) {\n          this.setState({\n            jVender: response.data.data,\n          });\n        } else {\n          this.onLoadPanelHiding(\n            response.data.error == null\n              ? response.data.message\n              : response.data.error,\n            \"error\"\n          );\n        }\n      })\n      .catch((error) => {\n        this.onLoadPanelHiding(\"Error\", \"error\");\n        console.log(error);\n      });\n  }\n\n  get FormLayout() {\n    return this.FormRef.current.instance;\n  }\n\n  OnClickSave = () => {\n    if (this.FormLayout.validate().isValid == true) {\n      Swal.fire({\n        type: \"info\",\n        showCancelButton: true,\n        text: \"Do you want to save ?\",\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No\",\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n      }).then((res) => {\n        if (res.value) {\n          this.setState({ LoadPanelVisible: true });\n\n          var data = new FormData();\n          data.append(\"vendorId\", this.state.jItems.vendorId);\n          data.append(\"masterCategoryId\", this.state.jItems.masterCategoryId);\n          data.append(\"subCategoryId\", this.state.jItems.subCategoryId);\n          data.append(\"name\", this.state.jItems.name);\n          data.append(\"description\", this.state.jItems.description);\n          data.append(\"price\", this.state.jItems.price);\n          data.append(\"discount\", this.state.jItems.discount);\n          data.append(\"isAvailable\", this.state.jItems.isAvailable);\n          data.append(\"status\", this.state.jItems.status);\n\n          if (this.state.File.length != 0) {\n            this.state.File.forEach((element) => {\n              data.append(\"images\", element);\n            });\n          } else {\n            data.append(\"images\", []);\n          }\n\n          if (this.state.ItemID == 0) {\n            var config = {\n              method: \"post\",\n              url: `${APIURl.URL}product`,\n              headers: {\n                Authorization:\n                  \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n                \"Content-Type\": \"application/json\",\n              },\n              data: data,\n            };\n          } else {\n            console.log(\"deleteimages\", this.state.jlRemovedImage);\n            data.append(\"productId\", this.state.jItems.productId);\n            data.append(\n              \"deletedImages\",\n              JSON.stringify(this.state.jlRemovedImage)\n            );\n            var config = {\n              method: \"put\",\n              url: `${APIURl.URL}product`,\n              headers: {\n                Authorization:\n                  \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n                \"Content-Type\": \"application/json\",\n              },\n              data: data,\n            };\n          }\n\n          this.serverRequest = axios(config)\n            .then((response) => {\n              if (response.data.success) {\n                this.onLoadPanelHiding(response.data.message, \"success\");\n                this.componentDidMount();\n                this.OnClearForm();\n              } else {\n                this.onLoadPanelHiding(\n                  response.data.error == null\n                    ? response.data.message\n                    : response.data.error,\n                  \"error\"\n                );\n              }\n            })\n            .catch((error) => {\n              this.onLoadPanelHiding(\"Error\", \"error\");\n              console.log(error);\n            });\n        } else if (res.dismiss == \"cancel\") {\n        } else if (res.dismiss == \"esc\") {\n        }\n      });\n    } else {\n      notify({\n        message: \"Fields marked with * are required\",\n        type: \"error\",\n        displayTime: 3000,\n        position: { at: \"top right\", offset: \"50\" },\n      });\n    }\n  };\n\n  OnClearForm = () => {\n    console.log(\"clear\");\n    this.setState({\n      ItemID: 0,\n      jItems: {},\n      jlItem: [],\n      LoadPanelVisible: false,\n      ListViewing: false,\n      jMasterCategory: [],\n      jSubCategory: [],\n      jVender: [],\n      File: [],\n      jlImageView: [],\n      jlImageId: [],\n      jlRemovedImage: [],\n    });\n    this.componentDidMount();\n  };\n\n  onLoadPanelHiding = (message, type) => {\n    this.setState({\n      LoadPanelVisible: false,\n    });\n\n    notify({\n      message: message,\n      type: type,\n      displayTime: 3000,\n      position: { at: \"top right\", offset: \"50\" },\n    });\n  };\n\n  OnListClickEvent = () => {\n    this.setState({ ListViewing: !this.state.ListViewing }, () => {});\n  };\n\n  onValueChanged = (e) => {\n    this.setState({ File: e.value });\n    console.log(\"++++++++++\", this.state);\n  };\n\n  OnListClickEvent = (SelectID) => {\n    console.log(\"+++++++++\", SelectID);\n    this.setState({ ListViewing: !this.state.ListViewing }, () => {\n      if (this.state.ListViewing) {\n        //Open\n\n        var config = {\n          method: \"get\",\n          url: `${APIURl.URL}product`,\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n            \"Content-Type\": \"application/json\",\n          },\n        };\n\n        this.serverRequest = axios(config)\n          .then((response) => {\n            if (response.data.success) {\n              this.setState({ jlItem: response.data.data });\n              console.log(\"-----------------------\", this.state);\n            } else {\n              this.onLoadPanelHiding(\n                response.data.error == null\n                  ? response.data.message\n                  : response.data.error,\n                \"error\"\n              );\n            }\n          })\n          .catch((error) => {\n            this.onLoadPanelHiding(\"Error\", \"error\");\n            console.log(error);\n          });\n      }\n      if (!this.state.ListViewing && SelectID != 0) {\n        //Close\n        this.setState({ ItemID: SelectID }, () => this.OnLoadData());\n      }\n    });\n  };\n\n  renderGridCell(cellData) {\n    console.log(\"celldate\", cellData.value);\n    return (\n      <div>\n        <img\n          style={{ width: \"100px\", height: \"100px\", padding: \"10px\" }}\n          src={cellData.value}\n        ></img>\n      </div>\n    );\n  }\n\n  OnLoadData() {\n    let filterDate = [];\n    let filterImage = [];\n    let filterImageID = [];\n    this.state.jlItem.map((value) => {\n      if (value._id == this.state.ItemID) {\n        filterDate.push({\n          vendorId: value.vendor,\n          masterCategoryId: value.masterCategory,\n          subCategoryId: value.subCategory,\n          name: value.name,\n          description: value.description,\n          price: value.price,\n          discount: value.discount,\n          isAvailable: value.isAvailable,\n          status: value.status,\n          productId: value._id,\n        });\n\n        console.log(\"value.images\", this.state.jlItem);\n        for (const val of value.images) {\n          console.log(val);\n          filterImage.push(val.imageUrl);\n          filterImageID.push(val);\n        }\n      }\n    });\n\n    console.log(\"filterDate\", filterDate);\n    console.log(\"filterDate\", filterImageID);\n\n    this.setState({\n      jItems: filterDate[0],\n      jlImageView: filterImage,\n      jlImageId: filterImageID,\n    });\n  }\n\n  onRowRemoved = (e) => {\n    this.state.jlRemovedImage.push(e.key);\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Card title=\"Manage Items\">\n          <Form ref={this.FormRef} colCount={2} formData={this.state.jItems}>\n            <Item\n              dataField=\"name\"\n              editorOptions={{\n                maxLength: 100,\n              }}\n            >\n              <Label text=\"Item Name\" />\n              <RequiredRule message=\"Item Name is required\" />\n            </Item>\n\n            <Item\n              dataField=\"vendorId\"\n              editorType=\"dxSelectBox\"\n              editorOptions={{\n                items: this.state.jVender,\n                valueExpr: \"_id\",\n                displayExpr: \"name\",\n              }}\n            >\n              <Label text=\"Vender\" />\n              <RequiredRule />\n            </Item>\n\n            <Item\n              dataField=\"masterCategoryId\"\n              editorType=\"dxSelectBox\"\n              editorOptions={{\n                items: this.state.jMasterCategory,\n                valueExpr: \"_id\",\n                displayExpr: \"name\",\n              }}\n            >\n              <Label text=\"Main Category\" />\n              <RequiredRule />\n            </Item>\n\n            <Item\n              dataField=\"subCategoryId\"\n              editorType=\"dxSelectBox\"\n              editorOptions={{\n                items: this.state.jSubCategory,\n                valueExpr: \"_id\",\n                displayExpr: \"name\",\n              }}\n            >\n              <Label text=\"Sub Category\" />\n              <RequiredRule />\n            </Item>\n\n            <Item\n              colSpan={2}\n              dataField=\"description\"\n              editorType=\"dxTextArea\"\n              editorOptions={this.notesOptions}\n            >\n              <Label text=\"Item Description\" />\n              <RequiredRule message=\"Item Description is required\" />\n            </Item>\n\n            <Item\n              dataField=\"price\"\n              editorType=\"dxNumberBox\"\n              editorOptions={{\n                maxLength: 50,\n                format: \"#,##0.00\",\n              }}\n            >\n              <Label text=\"Price\" />\n              <RequiredRule message=\"Price is required\" />\n            </Item>\n\n            <Item\n              dataField=\"discount\"\n              editorType=\"dxNumberBox\"\n              editorOptions={{\n                maxLength: 50,\n                format: \"#,##0.00\",\n              }}\n            >\n              <Label text=\"Discount\" />\n            </Item>\n\n            <Item dataField=\"isAvailable\" editorType=\"dxCheckBox\">\n              <Label text=\"Active\" />\n            </Item>\n\n            <Item dataField=\"status\" editorType=\"dxCheckBox\">\n              <Label text=\"Published\" />\n            </Item>\n\n            <Item\n              dataField=\"FileUpload\"\n              editorType=\"dxFileUploader\"\n              editorOptions={{\n                multiple: true,\n                uploadMode: \"useForm\",\n                allowCanceling: true,\n                allowedFileExtensions: [\".jpg\", \".jpeg\", \".gif\", \".png\"],\n                onValueChanged: this.onValueChanged,\n              }}\n            >\n            \n            </Item>\n          </Form>\n\n          {/* <div className=\"main-block\">\n            <div className=\"file-uploader-block\">\n              <FileUploader\n                multiple={true}\n                uploadMode=\"useForm\"\n                allowCanceling={true}\n                allowedFileExtensions={[\".jpg\", \".jpeg\", \".gif\", \".png\"]}\n                onValueChanged={this.onValueChanged}\n              />\n              <span className=\"note\">\n                {\"Allowed file extensions: \"}\n                <span>.jpg, .jpeg, .gif, .png</span>.\n              </span>\n            </div>\n          </div> */}\n\n          <DataGrid\n            id=\"grid-subject\"\n            ref={this.GridRef}\n            dataSource={this.state.jlImageId}\n            keyExpr=\"_id\"\n            showBorders={true}\n            allowSearch={true}\n            onRowRemoved={this.onRowRemoved}\n          >\n            <Editing mode=\"popup\" useIcons={true} allowDeleting={true}>\n              <Popup title=\"Add Main Category\" showTitle={true}></Popup>\n            </Editing>\n            <Column dataField=\"imageUrl\" cellRender={this.renderGridCell} />\n          </DataGrid>\n\n          <div className=\"widget-container\">\n            <Gallery\n              id=\"gallery\"\n              dataSource={this.state.jlImageView}\n              height={300}\n              slideshowDelay={true ? 2000 : 0}\n              loop={true}\n              showNavButtons={true}\n              showIndicator={true}\n            />\n          </div>\n\n          <Navbar bg=\"\" variant=\"light\">\n            <Button\n              variant=\"success\"\n              icon=\"feather icon-layers\"\n              onClick={this.OnClickSave}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"warning\"\n              icon=\"feather icon-layers\"\n              onClick={this.OnClearForm}\n            >\n              Clear\n            </Button>\n\n            <Button\n              variant=\"primary\"\n              icon=\"feather icon-layers\"\n              onClick={this.OnListClickEvent}\n            >\n              View List\n            </Button>\n          </Navbar>\n        </Card>\n\n        <LoadPanel\n          message=\"Processing.... Please, wait...\"\n          shadingColor=\"rgba(0,0,0,0.4)\"\n          onHiding={this.onLoadPanelHiding}\n          visible={this.state.LoadPanelVisible}\n          showIndicator={true}\n          shading={true}\n          showPane={true}\n          closeOnOutsideClick={false}\n          width={500}\n        />\n\n        <List\n          Show={this.state.ListViewing}\n          OnHide={this.OnListClickEvent}\n          ItemList={this.state.jlItem}\n        ></List>\n      </Aux>\n    );\n  }\n}\n\nexport default Items;\n"],"sourceRoot":""}