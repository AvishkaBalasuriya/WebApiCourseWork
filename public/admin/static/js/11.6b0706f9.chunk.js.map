{"version":3,"sources":["Demo/Authentication/SignIn/OTPVerfication.jsx"],"names":["OTPVerification","props","OnNotification","message","type","notify","displayTime","position","at","offset","onChange","bind","e","this","setState","target","name","value","console","log","state","className","placeholder","onClick","OnClickVerify","Component","connect","loggedReducer","data","dispatch","fetchLoginData","email","password"],"mappings":"6RASMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,eAAiB,SAACC,EAASC,GACzBC,IAAO,CACLF,QAASA,EACTC,KAAMA,EACNE,YAAa,IACbC,SAAU,CAAEC,GAAI,YAAaC,OAAQ,SAbvC,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAFC,E,qDAKVC,GACPC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,QAC1CC,QAAQC,IAAIN,KAAKO,S,+BAYT,IAAD,OACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WACb,0BAAMA,UAAU,MAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,OAElB,yBAAKA,UAAU,QACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,QACb,uBAAGA,UAAU,mCAEf,wBAAIA,UAAU,QAAd,qBAGA,yBAAKA,UAAU,oBACb,2BACEjB,KAAK,QACLiB,UAAU,eACVC,YAAY,SACZN,KAAK,MACLN,SAAUG,KAAKH,YAInB,yBAAKW,UAAU,yBAEf,4BACEA,UAAU,gCACVE,QAAS,kBAAM,EAAKC,kBAFtB,UAOA,uBAAGH,UAAU,oBACb,uBAAGA,UAAU,mBAAb,0B,GA5DcI,aAqFfC,uBAfS,SAACN,GAEvB,OADAF,QAAQC,IAAIC,EAAMO,eACX,CACLC,KAAMR,EAAMO,kBAIW,SAACE,GAC1B,MAAO,CACLC,eAAgB,SAACC,EAAOC,GACtBH,EAASC,YAAeC,EAAOC,QAKtBN,CAA6C1B","file":"static/js/11.6b0706f9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../../../src/store/actions\";\nimport \"./../../../assets/scss/style.scss\";\nimport Aux from \"../../../hoc/_Aux\";\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\nimport { fetchLoginData } from \"../../../store/logginActions\";\nimport notify from \"devextreme/ui/notify\";\nclass OTPVerification extends Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(this.state);\n  }\n\n  OnNotification = (message, type) => {\n    notify({\n      message: message,\n      type: type,\n      displayTime: 3000,\n      position: { at: \"top right\", offset: \"50\" },\n    });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Breadcrumb />\n        <div className=\"auth-wrapper\">\n          <div className=\"auth-content\">\n            <div className=\"auth-bg\">\n              <span className=\"r\" />\n              <span className=\"r s\" />\n              <span className=\"r s\" />\n              <span className=\"r\" />\n            </div>\n            <div className=\"card\">\n              <div className=\"card-body text-center\">\n                <div className=\"mb-4\">\n                  <i className=\"feather icon-unlock auth-icon\" />\n                </div>\n                <h3 className=\"mb-4\">Email Variication</h3>\n                {/* <p>{this.props.data.error}</p> */}\n\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Enter \"\n                    name=\"OTP\"\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <div className=\"form-group text-left\"></div>\n\n                <button\n                  className=\"btn btn-primary shadow-2 mb-4\"\n                  onClick={() => this.OnClickVerify()}\n                >\n                  Verify\n                </button>\n\n                <p className=\"mb-0 text-muted\"></p>\n                <p className=\"mb-0 text-muted\">Version 2.6.0</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state.loggedReducer);\n  return {\n    data: state.loggedReducer,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchLoginData: (email, password) => {\n      dispatch(fetchLoginData(email, password));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OTPVerification);\n"],"sourceRoot":""}