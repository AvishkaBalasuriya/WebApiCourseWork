{"version":3,"sources":["App/components/MainCard.js","component/Category/MainCategory.jsx"],"names":["MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","Component","MainCategory","OnClickSave","FormLayout","validate","isValid","Swal","fire","type","showCancelButton","text","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","then","res","value","LoadPanelVisible","data","JSON","stringify","email","jRegistration","password","passwordConfirm","firstName","lastName","mobileNumber","address","isSocial","console","log","config","method","url","APIURl","URL","headers","Authorization","localStorage","getItem","serverRequest","axios","response","success","onLoadPanelHiding","message","componentDidMount","OnClearForm","error","catch","dismiss","notify","displayTime","at","offset","OnListClickEvent","ListViewing","onInitNewRow","e","name","onRowRemoved","masterCategoryId","key","MasterCategoryID","jMasterCategory","FormRef","React","createRef","ref","GridRef","dataSource","keyExpr","showBorders","allowSearch","onRowInserting","mode","useIcons","allowDeleting","allowAdding","showTitle","dataField","caption","shadingColor","onHiding","visible","showIndicator","shading","showPane","closeOnOutsideClick","current","instance"],"mappings":"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","file":"static/js/15.f8fa6b50.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\nimport windowSize from \"react-window-size\";\n\nimport Aux from \"../../hoc/_Aux\";\nimport DEMO from \"../../store/constant\";\n\nclass MainCard extends Component {\n  state = {\n    isOption: this.props.isOption,\n    fullCard: false,\n    collapseCard: false,\n    loadCard: false,\n    cardRemove: false,\n  };\n\n  cardReloadHandler = () => {\n    this.setState({ loadCard: true });\n    setInterval(() => {\n      this.setState({ loadCard: false });\n    }, 3000);\n  };\n\n  cardRemoveHandler = () => {\n    this.setState({ cardRemove: true });\n  };\n\n  render() {\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n    let card = \"\";\n    let cardClass = [];\n\n    if (this.state.isOption) {\n      cardHeaderRight = (\n        <div className=\"card-header-right\">\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n              <i className=\"feather icon-more-horizontal\" />\n            </Dropdown.Toggle>\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={() => {\n                  this.setState((prevState) => {\n                    return { fullCard: !prevState.fullCard };\n                  });\n                }}\n              >\n                <i\n                  className={\n                    this.state.fullCard\n                      ? \"feather icon-minimize\"\n                      : \"feather icon-maximize\"\n                  }\n                />\n                <a href={DEMO.BLANK_LINK}>\n                  {\" \"}\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\n                </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={() => {\n                  this.setState((prevState) => {\n                    return { collapseCard: !prevState.collapseCard };\n                  });\n                }}\n              >\n                <i\n                  className={\n                    this.state.collapseCard\n                      ? \"feather icon-plus\"\n                      : \"feather icon-minus\"\n                  }\n                />\n                <a href={DEMO.BLANK_LINK}>\n                  {\" \"}\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\n                </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={this.cardReloadHandler}\n              >\n                <i className=\"feather icon-refresh-cw\" />\n                <a href={DEMO.BLANK_LINK}> Reload </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={this.cardRemoveHandler}\n              >\n                <i className=\"feather icon-trash\" />\n                <a href={DEMO.BLANK_LINK}> Remove </a>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      );\n    }\n\n    cardHeader = (\n      <Card.Header>\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\n        {cardHeaderRight}\n      </Card.Header>\n    );\n\n    if (this.state.fullCard) {\n      cardClass = [...cardClass, \"full-card\"];\n      fullScreenStyle = {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        width: this.props.windowWidth,\n        height: this.props.windowHeight,\n      };\n    }\n\n    if (this.state.loadCard) {\n      cardClass = [...cardClass, \"card-load\"];\n      loader = (\n        <div className=\"card-loader\">\n          <i className=\"pct-loader1 anim-rotate\" />\n        </div>\n      );\n    }\n\n    if (this.state.cardRemove) {\n      cardClass = [...cardClass, \"d-none\"];\n    }\n\n    if (this.props.cardClass) {\n      cardClass = [...cardClass, this.props.cardClass];\n    }\n\n    card = (\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\n        {cardHeader}\n        <Collapse in={!this.state.collapseCard}>\n          <div>\n            <Card.Body>{this.props.children}</Card.Body>\n          </div>\n        </Collapse>\n        {loader}\n      </Card>\n    );\n\n    return <Aux>{card}</Aux>;\n  }\n}\n\nexport default MainCard;\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/_Aux\";\nimport axios from \"axios\";\nimport Form, { Label, Item, RequiredRule } from \"devextreme-react/form\";\nimport \"devextreme-react/text-area\";\nimport Card from \"../../App/components/MainCard\";\nimport { Button, Navbar, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\nimport Swal from \"sweetalert2\";\nimport notify from \"devextreme/ui/notify\";\nimport APIURl from \"../../APIConfig\";\nimport DataGrid, {\n  Column,\n  Editing,\n  MasterDetail,\n  Popup,\n  Lookup,\n  Scrolling,\n  Paging,\n  Selection,\n  SearchPanel,\n} from \"devextreme-react/data-grid\";\n\nclass MainCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      MasterCategoryID: 0,\n      jMasterCategory: [],\n      LoadPanelVisible: false,\n      ListViewing: false,\n    };\n\n    this.FormRef = React.createRef();\n  }\n\n  componentDidMount() {\n    var config = {\n      method: \"get\",\n      url: `${APIURl.URL}category`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    this.serverRequest = axios(config)\n      .then((response) => {\n        if (response.data.success) {\n          this.setState({ jMasterCategory: response.data.data });\n        } else {\n          this.onLoadPanelHiding(\n            response.data.error == null\n              ? response.data.message\n              : response.data.error,\n            \"error\"\n          );\n        }\n\n        console.log(\"-----------------------\", this.state);\n        //this.OnListClickEvent();\n      })\n      .catch((error) => {\n        this.onLoadPanelHiding(\"Error\", \"error\");\n        console.log(error);\n      });\n  }\n\n  get FormLayout() {\n    return this.FormRef.current.instance;\n  }\n\n  OnClickSave = () => {\n    if (this.FormLayout.validate().isValid == true) {\n      Swal.fire({\n        type: \"info\",\n        showCancelButton: true,\n        text: \"Do you want to save ?\",\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No\",\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n      }).then((res) => {\n        if (res.value) {\n          this.setState({ LoadPanelVisible: true });\n\n          var data = JSON.stringify({\n            email: this.state.jRegistration.email,\n            password: this.state.jRegistration.password,\n            passwordConfirm: this.state.jRegistration.passwordConfirm,\n            firstName: this.state.jRegistration.firstName,\n            lastName: this.state.jRegistration.lastName,\n            mobileNumber: this.state.jRegistration.mobileNumber,\n            address: this.state.jRegistration.address,\n            isSocial: false,\n          });\n\n          console.log(\"adasdasd\", data);\n          var config = {\n            method: \"post\",\n            url: `${APIURl.URL}auth/register/admin`,\n            headers: {\n              Authorization:\n                \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n              \"Content-Type\": \"application/json\",\n            },\n            data: data,\n          };\n\n          this.serverRequest = axios(config)\n            .then((response) => {\n              if (response.data.success) {\n                this.onLoadPanelHiding(response.data.message, \"success\");\n                this.componentDidMount();\n                this.OnClearForm();\n              } else {\n                this.onLoadPanelHiding(\n                  response.data.error == null\n                    ? response.data.message\n                    : response.data.error,\n                  \"error\"\n                );\n              }\n              //this.OnListClickEvent();\n            })\n            .catch((error) => {\n              this.onLoadPanelHiding(\"Error\", \"error\");\n              console.log(error);\n            });\n        } else if (res.dismiss == \"cancel\") {\n        } else if (res.dismiss == \"esc\") {\n        }\n      });\n    } else {\n      notify({\n        message: \"Fields marked with * are required\",\n        type: \"error\",\n        displayTime: 3000,\n        position: { at: \"top right\", offset: \"50\" },\n      });\n    }\n  };\n\n  OnClearForm = () => {\n    this.setState({\n      jRegistration: {},\n    });\n  };\n\n  onLoadPanelHiding = (message, type) => {\n    this.setState({\n      LoadPanelVisible: false,\n    });\n\n    notify({\n      message: message,\n      type: type,\n      displayTime: 3000,\n      position: { at: \"top right\", offset: \"50\" },\n    });\n  };\n\n  OnListClickEvent = () => {\n    this.setState({ ListViewing: !this.state.ListViewing }, () => {});\n  };\n  onInitNewRow = (e) => {\n    Swal.fire({\n      type: \"info\",\n      showCancelButton: true,\n      text: \"Do you want to save ?\",\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"No\",\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n    }).then((res) => {\n      if (res.value) {\n        this.setState({ LoadPanelVisible: true });\n\n        var data = JSON.stringify({\n          name: e.data.name,\n        });\n\n        var config = {\n          method: \"post\",\n          url: `${APIURl.URL}category/add/masterCategory`,\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n            \"Content-Type\": \"application/json\",\n          },\n          data: data,\n        };\n\n        this.serverRequest = axios(config)\n          .then((response) => {\n            if (response.data.success) {\n              this.onLoadPanelHiding(response.data.message, \"success\");\n            } else {\n              this.onLoadPanelHiding(\n                response.data.error == null\n                  ? response.data.message\n                  : response.data.error,\n                \"error\"\n              );\n            }\n          })\n          .catch((error) => {\n            this.onLoadPanelHiding(\"Error\", \"error\");\n            console.log(error);\n          });\n      } else if (res.dismiss == \"cancel\") {\n      } else if (res.dismiss == \"esc\") {\n      }\n    });\n  };\n\n  onRowRemoved = (e) => {\n    this.setState({ LoadPanelVisible: true });\n\n    console.log(\"daat\", e);\n    var data = JSON.stringify({\n      masterCategoryId: e.key,\n    });\n\n    var config = {\n      method: \"delete\",\n      url: `${APIURl.URL}category/delete/masterCategory`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    this.serverRequest = axios(config)\n      .then((response) => {\n        if (response.data.success) {\n          this.onLoadPanelHiding(response.data.message, \"success\");\n        } else {\n          this.onLoadPanelHiding(\n            response.data.error == null\n              ? response.data.message\n              : response.data.error,\n            \"error\"\n          );\n        }\n      })\n      .catch((error) => {\n        this.onLoadPanelHiding(\"Error\", \"error\");\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Card title=\"Master Category\">\n          <DataGrid\n            id=\"grid-subject\"\n            ref={this.GridRef}\n            dataSource={this.state.jMasterCategory}\n            keyExpr=\"_id\"\n            showBorders={true}\n            allowSearch={true}\n            onRowInserting={this.onInitNewRow}\n            onRowRemoved={this.onRowRemoved}\n          >\n            <Editing\n              mode=\"popup\"\n              useIcons={true}\n              allowDeleting={true}\n              allowAdding={true}\n            >\n              <Popup title=\"Add Main Category\" showTitle={true}></Popup>\n            </Editing>\n            <Column dataField=\"name\" caption=\"Main Category\">\n              <RequiredRule />\n            </Column>\n          </DataGrid>\n        </Card>\n\n        <LoadPanel\n          message=\"Processing.... Please, wait...\"\n          shadingColor=\"rgba(0,0,0,0.4)\"\n          onHiding={this.onLoadPanelHiding}\n          visible={this.state.LoadPanelVisible}\n          showIndicator={true}\n          shading={true}\n          showPane={true}\n          closeOnOutsideClick={false}\n          width={500}\n        />\n      </Aux>\n    );\n  }\n}\n\nexport default MainCategory;\n"],"sourceRoot":""}