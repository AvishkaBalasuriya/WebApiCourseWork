{"version":3,"sources":["App/components/MainCard.js","DataLists/OTPEmail.jsx","component/Admin/Register.jsx"],"names":["MainCard","state","isOption","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","this","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","Component","OTPEmail","onSelectionChanged","e","SelectID","selectedRowsData","AutoID","onSelectClick","data","JSON","stringify","userId","otpCode","console","log","config","method","url","APIURl","URL","headers","Authorization","localStorage","getItem","axios","then","response","success","onLoadPanelHiding","message","OnClearForm","error","OnListClickEvent","catch","OnHide","onCloseClick","jList","jOTP","Modal","size","show","Show","onHide","backdrop","keyboard","closeButton","ref","FormRef","colCount","formData","dataField","editorOptions","maxLength","dataType","text","Button","variant","icon","Register","OnClickSave","FormLayout","validate","isValid","Swal","fire","type","showCancelButton","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","res","value","LoadPanelVisible","email","jRegistration","password","passwordConfirm","firstName","lastName","mobileNumber","address","isSocial","countryCode","serverRequest","dismiss","notify","displayTime","at","offset","ListViewing","UserID","React","createRef","colSpan","editorType","notesOptions","displayFormat","mode","Navbar","bg","shadingColor","onHiding","visible","showIndicator","shading","showPane","closeOnOutsideClick","User","jlRegister","current","instance"],"mappings":"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","file":"static/js/14.6bd36903.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\nimport windowSize from \"react-window-size\";\n\nimport Aux from \"../../hoc/_Aux\";\nimport DEMO from \"../../store/constant\";\n\nclass MainCard extends Component {\n  state = {\n    isOption: this.props.isOption,\n    fullCard: false,\n    collapseCard: false,\n    loadCard: false,\n    cardRemove: false,\n  };\n\n  cardReloadHandler = () => {\n    this.setState({ loadCard: true });\n    setInterval(() => {\n      this.setState({ loadCard: false });\n    }, 3000);\n  };\n\n  cardRemoveHandler = () => {\n    this.setState({ cardRemove: true });\n  };\n\n  render() {\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\n    let card = \"\";\n    let cardClass = [];\n\n    if (this.state.isOption) {\n      cardHeaderRight = (\n        <div className=\"card-header-right\">\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n              <i className=\"feather icon-more-horizontal\" />\n            </Dropdown.Toggle>\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={() => {\n                  this.setState((prevState) => {\n                    return { fullCard: !prevState.fullCard };\n                  });\n                }}\n              >\n                <i\n                  className={\n                    this.state.fullCard\n                      ? \"feather icon-minimize\"\n                      : \"feather icon-maximize\"\n                  }\n                />\n                <a href={DEMO.BLANK_LINK}>\n                  {\" \"}\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\n                </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={() => {\n                  this.setState((prevState) => {\n                    return { collapseCard: !prevState.collapseCard };\n                  });\n                }}\n              >\n                <i\n                  className={\n                    this.state.collapseCard\n                      ? \"feather icon-plus\"\n                      : \"feather icon-minus\"\n                  }\n                />\n                <a href={DEMO.BLANK_LINK}>\n                  {\" \"}\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\n                </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={this.cardReloadHandler}\n              >\n                <i className=\"feather icon-refresh-cw\" />\n                <a href={DEMO.BLANK_LINK}> Reload </a>\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"li\"\n                className=\"dropdown-item\"\n                onClick={this.cardRemoveHandler}\n              >\n                <i className=\"feather icon-trash\" />\n                <a href={DEMO.BLANK_LINK}> Remove </a>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      );\n    }\n\n    cardHeader = (\n      <Card.Header>\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\n        {cardHeaderRight}\n      </Card.Header>\n    );\n\n    if (this.state.fullCard) {\n      cardClass = [...cardClass, \"full-card\"];\n      fullScreenStyle = {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        width: this.props.windowWidth,\n        height: this.props.windowHeight,\n      };\n    }\n\n    if (this.state.loadCard) {\n      cardClass = [...cardClass, \"card-load\"];\n      loader = (\n        <div className=\"card-loader\">\n          <i className=\"pct-loader1 anim-rotate\" />\n        </div>\n      );\n    }\n\n    if (this.state.cardRemove) {\n      cardClass = [...cardClass, \"d-none\"];\n    }\n\n    if (this.props.cardClass) {\n      cardClass = [...cardClass, this.props.cardClass];\n    }\n\n    card = (\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\n        {cardHeader}\n        <Collapse in={!this.state.collapseCard}>\n          <div>\n            <Card.Body>{this.props.children}</Card.Body>\n          </div>\n        </Collapse>\n        {loader}\n      </Card>\n    );\n\n    return <Aux>{card}</Aux>;\n  }\n}\n\nexport default MainCard;\n","import React, { Component, Fragment } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"react-bootstrap\";\nimport DataGrid, {\n  Column,\n  SearchPanel,\n  GroupPanel,\n  Paging,\n} from \"devextreme-react/data-grid\";\nimport Form, { Label, Item, RequiredRule } from \"devextreme-react/form\";\nimport axios from \"axios\";\nimport APIURl from \"../APIConfig\";\n\nexport class OTPEmail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      SelectID: 0,\n      jList: [],\n      jOTP: {},\n    };\n\n    console.log(this.props);\n  }\n\n  componentDidMount() {}\n\n  onSelectionChanged = (e) => {\n    this.setState({ SelectID: e.selectedRowsData[0].AutoID });\n  };\n\n  onSelectClick = (e) => {\n    var data = JSON.stringify({\n      userId: \"60991e3473e8454fc0a40649\",\n      otpCode: \"574122\",\n    });\n\n    console.log(\"adasdasd\", data);\n    var config = {\n      method: \"post\",\n      url: `${APIURl.URL}otp/verify`,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then((response) => {\n        if (response.data.success) {\n          this.onLoadPanelHiding(response.data.message, \"success\");\n\n          this.OnClearForm();\n        } else {\n          this.onLoadPanelHiding(\n            response.data.error == null\n              ? response.data.message\n              : response.data.error,\n            \"error\"\n          );\n        }\n        this.OnListClickEvent();\n      })\n      .catch((error) => {\n        this.onLoadPanelHiding(\"Error\", \"error\");\n        console.log(error);\n      });\n\n    this.props.OnHide();\n  };\n\n  onCloseClick = (e) => {\n    this.props.OnHide(0);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Modal\n          size=\"xl\"\n          show={this.props.Show}\n          onHide={this.onCloseClick}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Email Variication</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form ref={this.FormRef} colCount={2} formData={this.state.jOTP}>\n              <Item\n                dataField=\"otpCode\"\n                editorOptions={{\n                  maxLength: 50,\n                  dataType: \"number\",\n                }}\n              >\n                <Label text=\"OTP \" />\n              </Item>\n            </Form>\n\n            <br></br>\n            <br></br>\n\n            <Button variant=\"success\" onClick={this.onSelectClick}>\n              Verify\n            </Button>\n            <Button\n              variant=\"danger\"\n              onClick={this.onCloseClick}\n              icon=\"feather icon-layers\"\n            >\n              Close\n            </Button>\n          </Modal.Body>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default OTPEmail;\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/_Aux\";\nimport axios from \"axios\";\nimport Form, { Label, Item, RequiredRule } from \"devextreme-react/form\";\nimport \"devextreme-react/text-area\";\nimport Card from \"../../App/components/MainCard\";\nimport { Button, Navbar, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { LoadPanel } from \"devextreme-react/load-panel\";\nimport Swal from \"sweetalert2\";\nimport notify from \"devextreme/ui/notify\";\nimport APIURl from \"../../APIConfig\";\nimport OTPEmail from \"../../DataLists/OTPEmail\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      UserID: 0,\n      jRegistration: {},\n      LoadPanelVisible: false,\n      ListViewing: false,\n    };\n\n    this.FormRef = React.createRef();\n  }\n\n  componentDidMount() {}\n\n  get FormLayout() {\n    return this.FormRef.current.instance;\n  }\n\n  OnClickSave = () => {\n    if (this.FormLayout.validate().isValid == true) {\n      Swal.fire({\n        type: \"info\",\n        showCancelButton: true,\n        text: \"Do you want to save ?\",\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No\",\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n      }).then((res) => {\n        if (res.value) {\n          this.setState({ LoadPanelVisible: true });\n\n          var data = JSON.stringify({\n            email: this.state.jRegistration.email,\n            password: this.state.jRegistration.password,\n            passwordConfirm: this.state.jRegistration.passwordConfirm,\n            firstName: this.state.jRegistration.firstName,\n            lastName: this.state.jRegistration.lastName,\n            mobileNumber: this.state.jRegistration.mobileNumber,\n            address: this.state.jRegistration.address,\n            isSocial: false,\n            countryCode: \"LK\",\n          });\n\n          console.log(\"adasdasd\", data);\n          var config = {\n            method: \"post\",\n            url: `${APIURl.URL}auth/register/admin`,\n            headers: {\n              Authorization:\n                \"Bearer \" + localStorage.getItem(\"accessToken\") + \"\",\n              \"Content-Type\": \"application/json\",\n            },\n            data: data,\n          };\n\n          this.serverRequest = axios(config)\n            .then((response) => {\n              if (response.data.success) {\n                this.onLoadPanelHiding(response.data.message, \"success\");\n\n                this.OnClearForm();\n              } else {\n                this.onLoadPanelHiding(\n                  response.data.error == null\n                    ? response.data.message\n                    : response.data.error,\n                  \"error\"\n                );\n              }\n              //this.OnListClickEvent();\n            })\n            .catch((error) => {\n              this.onLoadPanelHiding(\"Error\", \"error\");\n              console.log(error);\n            });\n        } else if (res.dismiss == \"cancel\") {\n        } else if (res.dismiss == \"esc\") {\n        }\n      });\n    } else {\n      notify({\n        message: \"Fields marked with * are required\",\n        type: \"error\",\n        displayTime: 3000,\n        position: { at: \"top right\", offset: \"50\" },\n      });\n    }\n  };\n\n  OnClearForm = () => {\n    this.setState({\n      jRegistration: {},\n    });\n  };\n\n  onLoadPanelHiding = (message, type) => {\n    this.setState({\n      LoadPanelVisible: false,\n    });\n\n    notify({\n      message: message,\n      type: type,\n      displayTime: 3000,\n      position: { at: \"top right\", offset: \"50\" },\n    });\n  };\n\n  OnListClickEvent = () => {\n    this.setState({ ListViewing: !this.state.ListViewing }, () => {});\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Card title=\"User Registration\">\n          <Form\n            ref={this.FormRef}\n            colCount={2}\n            formData={this.state.jRegistration}\n          >\n            <Item\n              dataField=\"email\"\n              editorOptions={{\n                maxLength: 100,\n              }}\n            >\n              <Label text=\"Email\" />\n              <RequiredRule message=\"Email is required\" />\n            </Item>\n            <Item\n              dataField=\"firstName\"\n              editorOptions={{\n                maxLength: 50,\n              }}\n            >\n              <Label text=\"First Name\" />\n              <RequiredRule message=\"First Name is required\" />\n            </Item>\n\n            <Item\n              dataField=\"lastName\"\n              editorOptions={{\n                maxLength: 50,\n              }}\n            >\n              <Label text=\"Last Name\" />\n              <RequiredRule message=\"Last Name is required\" />\n            </Item>\n\n            <Item\n              dataField=\"mobileNumber\"\n              editorOptions={{\n                maxLength: 12,\n              }}\n            >\n              <Label text=\"Mobile Number\" />\n            </Item>\n\n            <Item\n              colSpan={2}\n              dataField=\"address\"\n              editorType=\"dxTextArea\"\n              editorOptions={this.notesOptions}\n            >\n              <Label text=\"Address\" />\n              <RequiredRule message=\"Address is required\" />\n            </Item>\n\n            <Item\n              dataField=\"password\"\n              displayFormat=\"#\"\n              editorOptions={{\n                mode: \"password\",\n              }}\n            >\n              <Label text=\"Password\" />\n              <RequiredRule message=\"Password is required\" />\n            </Item>\n\n            <Item\n              dataField=\"passwordConfirm\"\n              displayFormat=\"#\"\n              editorOptions={{\n                mode: \"password\",\n              }}\n            >\n              <Label text=\"Confirm Password\" />\n              <RequiredRule message=\"Confirm Password is required\" />\n            </Item>\n          </Form>\n\n          <Navbar bg=\"\" variant=\"light\">\n            <Button\n              variant=\"success\"\n              icon=\"feather icon-layers\"\n              onClick={this.OnClickSave}\n            >\n              Save\n            </Button>\n            <Button variant=\"warning\" icon=\"feather icon-layers\">\n              Clear\n            </Button>\n\n            <Button variant=\"primary\" icon=\"feather icon-layers\">\n              View List\n            </Button>\n          </Navbar>\n        </Card>\n\n        <LoadPanel\n          message=\"Processing.... Please, wait...\"\n          shadingColor=\"rgba(0,0,0,0.4)\"\n          onHiding={this.onLoadPanelHiding}\n          visible={this.state.LoadPanelVisible}\n          showIndicator={true}\n          shading={true}\n          showPane={true}\n          closeOnOutsideClick={false}\n          width={500}\n        />\n\n        <OTPEmail\n          Show={this.state.ListViewing}\n          OnHide={this.OnListClickEvent}\n          User={this.state.jlRegister}\n        ></OTPEmail>\n      </Aux>\n    );\n  }\n}\n\nexport default Register;\n"],"sourceRoot":""}